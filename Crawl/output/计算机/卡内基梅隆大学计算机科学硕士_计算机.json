{
  "crawl_time": "2025-08-05T10:45:52.742638",
  "pages": [
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Master's Programs\n[HEADING] M.S. in Computer Science\n[HEADING] Fifth Year Master's Program\n[HEADING] Accelerated MBA Program\n[HEADING] Additional Master's Programs Information\nThe Computer Science Department offers three different master’s options for students who have completed (or will complete) a bachelor’s degree and want to extend their training in computer science.\nOur largest program is the M.S. in Computer Science, which allows students with undergraduate degrees in computer science or another technical field to work with their academic advisor to create their own course of study. We also offer a fifth-year master’s program for current SCS undergraduates, and a 3-2 MBA program with CMU’s Tepper School of Business.\nThe Master of Science in Computer Science offers students with a bachelor's degree the opportunity to take their skills to the next level with advanced study.  We cater to students with basic analytic skills and a strong aptitude for mathematics, programming, and logical reasoning.  You don’t need a bachelor’s degree in computer science specifically for the program, but a technical undergraduate background will set you up for success.\nProgram Details\nWe designed the Fifth Year Master's Program specifically for students receiving a B.S. or double major in Computer Science at Carnegie Mellon. The program encourages our very brightest undergraduates to become involved with research that broadens their undergraduate experience. We also want to encourage a select group of students to continue to graduate school by providing them with an additional qualification and period of study beyond their undergraduate degree, resulting in a master’s degree in computer science.\nProgram Details\nStudents interested in earning their bachelor’s degree and MBA in five years may be interested in the Tepper School of Business’s Accelerated MBA program. The program is administered by the Tepper Schoool, and more information is available on their web site.\nInformation about Master's Programs in the School of Computer Science:\nOther Master's Degree Programs:\nhttps://www.cs.cmu.edu/academics/masters/programs\nMaster's Programs comparison table:\nhttps://www.cs.cmu.edu/academics/masters/programs-comparison\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Other Master's Degree Programs:\nhttps://www.cs.cmu.edu/academics/masters/programs\n• Master's Programs comparison table:\nhttps://www.cs.cmu.edu/academics/masters/programs-comparison\n• Academics\n\n\nCurrent Courses\n\n\nUpcoming Semester Courses\n\n\nSchedule of Classes\n\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n• Master's Programs\n\n\nM.S. in Computer Science\n\n\nFifth Year Master's\n\n\nAccelerated MBA Program\n\n\nMaster's - How to Apply\n\n\nMaster's Programs Contacts\n\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n• Student Resources\n[CARD]\nM.S. in Computer Science\nThe Master of Science in Computer Science offers students with a bachelor's degree the opportunity to take their skills to the next level with advanced study.  We cater to students with basic analytic skills and a strong aptitude for mathematics, programming, and logical reasoning.  You don’t need a bachelor’s degree in computer science specifically for the program, but a technical undergraduate background will set you up for success.\nProgram Details\n[CARD]\nFifth Year Master's Program\nWe designed the Fifth Year Master's Program specifically for students receiving a B.S. or double major in Computer Science at Carnegie Mellon. The program encourages our very brightest undergraduates to become involved with research that broadens their undergraduate experience. We also want to encourage a select group of students to continue to graduate school by providing them with an additional qualification and period of study beyond their undergraduate degree, resulting in a master’s degree in computer science.\nProgram Details\n[CARD]\nAccelerated MBA Program\nAccelerated MBA Program\nStudents interested in earning their bachelor’s degree and MBA in five years may be interested in the Tepper School of Business’s Accelerated MBA program. The program is administered by the Tepper Schoool, and more information is available on their web site.\n[CARD]\nAdditional Master's Programs Information\nInformation about Master's Programs in the School of Computer Science:\n\n\nOther Master's Degree Programs:\nhttps://www.cs.cmu.edu/academics/masters/programs \n\n\nMaster's Programs comparison table:\nhttps://www.cs.cmu.edu/academics/masters/programs-comparison",
      "crawl_status": "success",
      "depth": 0,
      "links": [
        {
          "anchor_text": "Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page",
          "matched_keyword": "admission",
          "url": "https://csd.cmu.edu/admissions/prospective-students"
        },
        {
          "anchor_text": "Program Details",
          "matched_keyword": "program",
          "url": "https://csd.cmu.edu/academics/masters/ms-in-computer-science"
        },
        {
          "anchor_text": "Program Details",
          "matched_keyword": "program",
          "url": "https://csd.cmu.edu/academics/masters/fifth-year"
        },
        {
          "anchor_text": "https://www.cs.cmu.edu/academics/masters/programs",
          "matched_keyword": "master",
          "url": "https://www.cs.cmu.edu/academics/masters/programs"
        },
        {
          "anchor_text": "https://www.cs.cmu.edu/academics/masters/programs-comparison",
          "matched_keyword": "master",
          "url": "https://www.cs.cmu.edu/academics/masters/programs-comparison"
        },
        {
          "anchor_text": "Current Courses",
          "matched_keyword": "course",
          "url": "https://csd.cmu.edu/academics/courses"
        },
        {
          "anchor_text": "Upcoming Semester Courses",
          "matched_keyword": "course",
          "url": "https://csd.cmu.edu/academics/upcoming-courses"
        },
        {
          "anchor_text": "Undergraduate Catalog",
          "matched_keyword": "graduate",
          "url": "http://coursecatalog.web.cmu.edu/"
        },
        {
          "anchor_text": "Bachelor's Programs",
          "matched_keyword": "program",
          "url": "https://csd.cmu.edu/academics/bachelors/overview"
        },
        {
          "anchor_text": "Fifth Year Master's",
          "matched_keyword": "master",
          "url": "https://csd.cmu.edu/academics/masters/fifth-year"
        },
        {
          "anchor_text": "Accelerated MBA Program",
          "matched_keyword": "program",
          "url": "https://www.cmu.edu/tepper/programs/mba/curriculum/dual-and-joint-degrees/3-2-mba.html"
        },
        {
          "anchor_text": "Master's - How to Apply",
          "matched_keyword": "master",
          "url": "https://csd.cmu.edu/academics/masters/admissions"
        },
        {
          "anchor_text": "Master's Programs Contacts",
          "matched_keyword": "master",
          "url": "https://csd.cmu.edu/academics/masters/ms-program-contacts"
        },
        {
          "anchor_text": "Other SCS Master's Programs",
          "matched_keyword": "master",
          "url": "https://www.cs.cmu.edu/academics/masters/programs"
        },
        {
          "anchor_text": "Doctoral Programs",
          "matched_keyword": "program",
          "url": "https://csd.cmu.edu/academics/doctoral/overview"
        }
      ],
      "title": "Master's Programs | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/masters/overview"
    },
    {
      "content": "[HEADING] Undergraduate Catalog\n[HEADING] 2024-2025 Undergraduate Catalog\n[HEADING] Carnegie Mellon University's Undergraduate Catalog is an annual publication that details academic programs and degrees offered, course descriptions, and university policies and services.\n[HEADING] Policy Statement\n[HEADING] Contents\n[HEADING] University Leadership Council\n[HEADING] Officers of the Board of Trustees\n[HEADING] Voting Trustees\n[HEADING] Emeritus Trustees\n[HEADING] Print Options\nCarnegie Mellon University is accredited by the Middle States Commission on Higher Education. The university is authorized to operate in several states.\nwww.cmu.edu\nWhile information in this catalog is current as of August 2024, it is subject to change throughout the academic year. Students should consult with their academic department for the most up-to-date information about program requirements. Members of the campus community may direct catalog changes or inquiries to catalog@andrew.cmu.edu. Note that once the PDF of the catalog is final and archived, changes can only be made to the online version.\nThe next catalog will be published in August 2025; in the interim, new courses will be displayed in the Schedule of Classes, which is published in November and April each year.\nCarnegie Mellon University does not discriminate in admission, employment, or administration of its programs or activities on the basis of race, color, national origin, sex, disability, age, sexual orientation, gender identity, pregnancy or related condition, family status, marital status, parental status, religion, ancestry, veteran status, or genetic information. Furthermore, Carnegie Mellon University does not discriminate and is required not to discriminate in violation of federal, state, or local laws or executive orders.\nThe university’s Discriminatory and Sexual Misconduct Policy contains grievance procedures that provide for the prompt and equitable resolution of Complaints alleging any action which would be prohibited by this Policy.\nInquiries concerning the application of and compliance with this statement should be directed to the Office for Institutional Equity and Title IX, Carnegie Mellon University, 5000 Forbes Avenue, Pittsburgh, PA 15213, telephone 412-268-7125.\nObtain general information about Carnegie Mellon University by calling 412-268-2000.\nFARNAM JAHANIAN, President\nJAMES H. GARRETT, JR., Provost and Chief Academic Officer\nSHELLEY ANNA, Vice Provost for Faculty\nISABELLE BAJEUX-BESNAINOU, Dean, Tepper School of Business\nKATE BARRACLOUGH, Vice Provost for Education\nANGELA BLANTON, Vice President for Finance and Chief Financial Officer\nAMY L. BURKERT, Senior Vice Provost for Academic Initiatives\nGINA CASALENGO, Vice President for Student Affairs and Dean of Students\nBECKY CULYBA, Vice Provost for Strategic Initiatives and Chief of Staff to the Provost\nMARY JO DIVELY, Vice President and General Counsel\nPAM EAGER, Interim Vice President for University Advancement\nWANDA HEADING-GRANT, Vice Provost for Community, Culture and Engagement\nMARTIAL HEBERT, Dean, School of Computer Science\nTYSEN KENDIG, Vice President for University Communications and Marketing\nCHARLES A. KENNEDY, Chief Investment Officer\nLISA KRIEG, Associate Vice President for Global Strategic Initiatives and Institutional Accreditation\nRAMAYYA KRISHNAN, Dean, Heinz College of Information Systems and Public Policy\nMARSHA LOVETT, Vice Provost for Teaching and Learning Innovation\nTHERESA MAYER, Vice President for Research\nCURTIS MEYER, Interim Dean, Mellon College of Science\nTRICIA O'REILLY, Chief of Staff to the President\nMARY ELLEN POOLE, Dean, College of Fine Arts\nWILLIAM SANDERS, Dean, College of Engineering\nRICHARD SCHEINES, Dean, Dietrich College of Humanities and Social Sciences\nMICHAEL TRICK, Dean, Qatar Campus\nSTAN WADDELL, Vice President for Information Technology and Chief Information Officer\nKEITH WEBSTER, Dean, University Libraries and Director of Emerging and Integrative Media Initiatives\nDARYL WEINERT, Vice President for Operations\nKRISTINA WONG DAVIS, Vice Provost for Enrollment Management and Dean of Admission\nHENRY ZHENG, Vice Provost for Institutional Effectiveness and Planning\nDAVID A. COULTER, Chair\nANNE M. MOLLOY, Vice Chair\nFARNAM JAHANIAN, President\nGINA CASALEGNO, Vice President for Student Affairs and Dean of Student Affairs\nMARY JO DIVELY, Vice President and General Counsel, and Secretary of the Corporation\nJOHN DOLAN, Treasurer\nKATE LIPPERT, Assistant Secretary of the Corporation\nCARRIE NELSON, Assistant Treasurer\nJOEL ADAMS, General Partner, Adams Capital Management, Inc\nLANE M. BESS, Principal and Founder, Bess Ventures and Advisory, and CEO, Deep Instinct\nRONALD BIANCHINI, JR.\nKEITH BLOCK, Founder and CEO, Smith Point Capital\nFRANK BRUNCKHORST, Boar's Head Provisions Co., Inc.\nGLORIA CHEN, Chief People Officer and Executive Vice President of Employee Experience, Adobe Inc.\nDAVID COULTER, Special Limited Partner, Warburg Pincus LLC\nNATHALIE COWAN, Founder, Abergel Homes\nRUSSELL CROCKETT, Managing Partner & Chief Executive Officer, Aztlan Chemical; Principal and Owner, RTC Energy LLC\nJEANNE CUNICELLI, Executive Vice President, UPMC Enterprises\nTED DECKER, Chair, President and Chief Executive Officer, The Home Depot\nSHRINIVAS V. DEMPO, Chairman, Dempo Group of Companies\nFRANCISCO D'SOUZA, Co-founder and Managing Partner, Recognize\nHOWARD L. ELLIN, Partner, Skadden Arps Slate Meagher and Flom\nCHARLES EVANS, Retired President and Chief Executive Officer, Federal Reserve Bank of Chicago\nEDWARD H. FRANK, Executive Chair, Gradient Technologies\nYOSHIAKI FUJIMORI, Chairman, Oracle Corporation Japan\nED GAINEY, (ex officio), Mayor, City of Pittsburgh\nERIC GILER, Founder and Co-CEO, OmniZare Imaging, Inc.\nAJEI GOPAL, President and Chief Executive Officer, ANSYS, Inc.\nEDWARD J. GREFENSTETTE, President and CIO, The Dietrich Foundation\nTHOMAS HEALY, Founder and Chief Executive Officer, Hyliion\nFARNAM JAHANIAN, (ex officio), President, Carnegie Mellon University\nLARRY E. JENNINGS, JR., Senior Managing Director, ValStone Partners, LLC\nKATHERINE KOHATSU, (ex officio), President, Andrew Carnegie Society\nDANIEL LAVELLE, (ex officio), President, Pittsburgh City Council\nJOANNA LOVERING, (ex officio), President, Carnegie Mellon Alumni Association\nJ. MICHAEL MCQUADE, Former Vice President for Research, Carnegie Mellon University\nANNE M. MOLLOY, Executive Director, Posner Fine Arts Foundation\nBRIAN OLSAVSKY, Senior Vice President and Chief Financial Officer, Amazon.com\nSHALINI RAY, Managing Leader, Guidehouse\nKRISTIEANNE REED, Chief Executive Officer, Jerry Bruckheimer Television\nSAM REIMAN, Director, Richard King Mellon Foundation\nJEWELL PARKER RHODES, Founding Artistic Director of the Virginia G. Piper Center for Creative Writing and Narrative Studies Professor, Arizona State University\nMANOJ SINGH, Retired Chief Operating Officer, Deloitte Touche Tohmatsu Limited\nLUKE SKURMAN, CEO, Niche\nLIP-BU TAN, Chairman, Walden International\nLOWELL TAYLOR, (ex officio), Chair, Faculty Senate, Carnegie Mellon University\nDAVID TEPPER, President and Founder, Appaloosa Management L.P.\nTHOMAS TULL, Chairman and CEO, Tulco\nTAMARA TUNIE, Actor, Singer, Director and Producer\nJOHN R. BERTUCCI, Chairman Emeritus, MKS Instruments, Inc.\nCAROL R. BROWN, Former President, Pittsburgh Cultural Trust\nROBERT M. BROWN, III, Retired Managing Director, Lehman Brothers\nERIC COOPER\nERROLL B. DAVIS, JR., President and Board Chair, African American Heritage House at Chautauqua Institution\nW. LOGAN DICKERSON, President, Lindwood Farm, Inc. & Protos Foods, Inc.\nPHILIP L. DOWD, Sherick Enterprises, LLC\nDINA DUBLON\nWILLIAM B. ELLIS, Retired Chairman and CEO, Northeast Utilities\nCYNTHIA FRIEDMAN, Co-owner, Union Real Estate Company of Pittsburgh\nCLAIRE W. GARGALLI\nRICHARD D. HAMILTON, Retired Director of Product Supply, Global OleoChemical, Procter and Gamble\nTHERESA HEINZ, Chair Emeritus, The Heinz Endowments; Chairman, Heinz Family Philanthropies\nT. JEROME HOLLERAN, Retired Chairman, Precision Medical Products, Inc.\nW. LEE HOSKINS, Retired Chairman and CEO, The Huntington National Bank\nTORRENCE M. HUNT, JR., The Elmhurst Group and the Roy A. Hunt Foundation\nTOD S. JOHNSON, Managing Director, Duo Partners\nPATRICIA ASKWITH KENNER, President, Campus Coach Lines\nDAVID M. KIRR, Partner, Kirr, Marbach & Company\nRAYMOND J. LANE, Partner Emeritus, GreatPoint Ventures\nEDWARD E. LUCENTE\nTHOMAS A. MCCONOMY, Retired Chairman of the Board, Calgon Carbon Corporation\nJACK E. MCGRATH, Retired Senior Vice President, Booz, Allen & Hamilton\nREGINA GOUGER MILLER, Owner/Artist, Ginger and Spice; Regina Gouger Miller Studio\nALESSANDRO OVI, Executive Vice President, Fondazione Popoli\nE. KEARS POLLOCK, Retired Executive Vice President, PPG Industries, Inc.\nDAVID PORGES, Retired Chairman and CEO, EQT Corporation\nCHARLES J. QUEENAN, JR., Chairman Emeritus, K&L Gates LLP\nJAMES E. ROHR, Retired Chairman and Chief Executive Officer, The PNC Financial Services Group, Inc.\nJOYCE BOWIE SCOTT, J. Bowie Scott Studio\nDAVID S. SHAPIRA, Chairman Emeritus, Board of Directors, Giant Eagle, Inc.\nAJIT SHETTY, Retired Chairman of the Board, Janssen Pharmaceuticals\nJ. LEA HILLMAN SIMONDS, Chair, Hillman Family Foundations\nRAYMOND SMITH, Chairman, Rothschild Continuation Investments\nDONALD E. STITZENBERG, Principal, CBA Associates\nMARY ANN ULISHNEY\nPAULA KAUFFMAN WAGNER, Producer/Owner, Chestnut Ridge Productions\nSend Page to Printer\nPrint this page.\nDownload Page (PDF)\nThe PDF will include all information unique to this page.\n• Carnegie Mellon University's Undergraduate Catalog is an annual publication that details academic programs and degrees offered, course descriptions, and university policies and services.\n• Contents\n• About CMULook at Carnegie MellonUndergraduate AdmissionCost of AttendanceOffice of Enrollment ManagementDivision of Student AffairsOffice of the Vice Provost for Community, Culture and EngagementUndergraduate OptionsUndergraduate Academic RegulationsUniversity PoliciesUniversity ServicesDepartment of Athletics and Physical EducationDepartment of Athletics and Physical Education CoursesReserve Officers' Training Corps (ROTC)ROTC Courses\n• Look at Carnegie Mellon\n• Undergraduate Admission\n• Cost of Attendance\n• Office of Enrollment Management\n• Division of Student Affairs\n• Office of the Vice Provost for Community, Culture and Engagement\n• Undergraduate Options\n• Undergraduate Academic Regulations\n• University Policies\n• University Services\n• Department of Athletics and Physical EducationDepartment of Athletics and Physical Education Courses\n• Department of Athletics and Physical Education Courses\n• Reserve Officers' Training Corps (ROTC)ROTC Courses\n• ROTC Courses\n• Degrees Offered\n• Schools/CollegesCollege of EngineeringCIT Interdisciplinary CoursesDepartment of Biomedical EngineeringDepartment of Chemical EngineeringDepartment of Civil and Environmental EngineeringDepartment of Electrical and Computer EngineeringDepartment of Engineering and Public PolicyDepartment of Materials Science and EngineeringDepartment of Mechanical EngineeringIntegrated Innovation InstituteEngineering Minors for Non-Engineering StudentsUndergraduate Designated Minors in the College of EngineeringCollege of Fine ArtsCollege of Fine Arts Interdisciplinary CoursesMinors Offered by the College of Fine ArtsSchool of ArchitectureSchool of ArtSchool of DesignSchool of DramaSchool of MusicDietrich College of Humanities and Social SciencesDepartment of EnglishDepartment of HistoryThe Major in Information SystemsCarnegie Mellon Institute for Strategy and TechnologyDepartment of Languages, Cultures and Applied LinguisticsDepartment of PhilosophyDepartment of PsychologyDepartment of Social and Decision SciencesDepartment of Statistics and Data ScienceDietrich College Interdisciplinary MajorsDietrich College Interdisciplinary MinorsDietrich College Interdisciplinary CoursesHeinz College of Information Systems and Public PolicyMellon College of ScienceDepartment of Biological Sciences Department of ChemistryDepartment of Mathematical SciencesDepartment of PhysicsMCS Interdisciplinary CoursesMinors Offered by the Mellon College of ScienceSchool of Computer ScienceArtificial Intelligence ProgramComputational Biology ProgramComputer Science ProgramHuman-Computer Interaction ProgramRobotics ProgramSCS Additional MinorsSCS ConcentrationsSCS CoursesTepper School of BusinessUniversity CoreUndergraduate Business AdministrationUndergraduate EconomicsCarnegie Mellon University in Qatar\n• College of EngineeringCIT Interdisciplinary CoursesDepartment of Biomedical EngineeringDepartment of Chemical EngineeringDepartment of Civil and Environmental EngineeringDepartment of Electrical and Computer EngineeringDepartment of Engineering and Public PolicyDepartment of Materials Science and EngineeringDepartment of Mechanical EngineeringIntegrated Innovation InstituteEngineering Minors for Non-Engineering StudentsUndergraduate Designated Minors in the College of Engineering\n• CIT Interdisciplinary Courses\n• Department of Biomedical Engineering\n• Department of Chemical Engineering\n• Department of Civil and Environmental Engineering\n• Department of Electrical and Computer Engineering\n• Department of Engineering and Public Policy\n• Department of Materials Science and Engineering\n• Department of Mechanical Engineering\n• Integrated Innovation Institute\n• Engineering Minors for Non-Engineering Students\n• Undergraduate Designated Minors in the College of Engineering\n• College of Fine ArtsCollege of Fine Arts Interdisciplinary CoursesMinors Offered by the College of Fine ArtsSchool of ArchitectureSchool of ArtSchool of DesignSchool of DramaSchool of Music\n• College of Fine Arts Interdisciplinary Courses\n• Minors Offered by the College of Fine Arts\n• School of Architecture\n• School of Art\n• School of Design\n• School of Drama\n• School of Music\n• Dietrich College of Humanities and Social SciencesDepartment of EnglishDepartment of HistoryThe Major in Information SystemsCarnegie Mellon Institute for Strategy and TechnologyDepartment of Languages, Cultures and Applied LinguisticsDepartment of PhilosophyDepartment of PsychologyDepartment of Social and Decision SciencesDepartment of Statistics and Data ScienceDietrich College Interdisciplinary MajorsDietrich College Interdisciplinary MinorsDietrich College Interdisciplinary Courses\n• Department of English\n• Department of History\n• The Major in Information Systems\n• Carnegie Mellon Institute for Strategy and Technology\n• Department of Languages, Cultures and Applied Linguistics\n• Department of Philosophy\n• Department of Psychology\n• Department of Social and Decision Sciences\n• Department of Statistics and Data Science\n• Dietrich College Interdisciplinary Majors\n• Dietrich College Interdisciplinary Minors\n• Dietrich College Interdisciplinary Courses\n• Heinz College of Information Systems and Public Policy\n• Mellon College of ScienceDepartment of Biological Sciences Department of ChemistryDepartment of Mathematical SciencesDepartment of PhysicsMCS Interdisciplinary CoursesMinors Offered by the Mellon College of Science\n• Department of Biological Sciences\n• Department of Chemistry\n• Department of Mathematical Sciences\n• Department of Physics\n• MCS Interdisciplinary Courses\n• Minors Offered by the Mellon College of Science\n• School of Computer ScienceArtificial Intelligence ProgramComputational Biology ProgramComputer Science ProgramHuman-Computer Interaction ProgramRobotics ProgramSCS Additional MinorsSCS ConcentrationsSCS Courses\n• Artificial Intelligence Program\n• Computational Biology Program\n• Computer Science Program\n• Human-Computer Interaction Program\n• Robotics Program\n• SCS Additional Minors\n• SCS Concentrations\n• SCS Courses\n• Tepper School of BusinessUniversity CoreUndergraduate Business AdministrationUndergraduate Economics\n• University Core\n• Undergraduate Business Administration\n• Undergraduate Economics\n• Carnegie Mellon University in Qatar\n• Interdisciplinary ProgramsBXA Intercollege Degree ProgramsBXA Intercollege Program CoursesCarnegie Mellon University-Wide Studies Courses\n• BXA Intercollege Degree ProgramsBXA Intercollege Program Courses\n• BXA Intercollege Program Courses\n• Carnegie Mellon University-Wide Studies Courses\n• Course Descriptions\n• Look at Carnegie Mellon\n• Undergraduate Admission\n• Cost of Attendance\n• Office of Enrollment Management\n• Division of Student Affairs\n• Office of the Vice Provost for Community, Culture and Engagement\n• Undergraduate Options\n• Undergraduate Academic Regulations\n• University Policies\n• University Services\n• Department of Athletics and Physical EducationDepartment of Athletics and Physical Education Courses\n• Department of Athletics and Physical Education Courses\n• Reserve Officers' Training Corps (ROTC)ROTC Courses\n• ROTC Courses\n• Department of Athletics and Physical Education Courses\n• ROTC Courses\n• College of EngineeringCIT Interdisciplinary CoursesDepartment of Biomedical EngineeringDepartment of Chemical EngineeringDepartment of Civil and Environmental EngineeringDepartment of Electrical and Computer EngineeringDepartment of Engineering and Public PolicyDepartment of Materials Science and EngineeringDepartment of Mechanical EngineeringIntegrated Innovation InstituteEngineering Minors for Non-Engineering StudentsUndergraduate Designated Minors in the College of Engineering\n• CIT Interdisciplinary Courses\n• Department of Biomedical Engineering\n• Department of Chemical Engineering\n• Department of Civil and Environmental Engineering\n• Department of Electrical and Computer Engineering\n• Department of Engineering and Public Policy\n• Department of Materials Science and Engineering\n• Department of Mechanical Engineering\n• Integrated Innovation Institute\n• Engineering Minors for Non-Engineering Students\n• Undergraduate Designated Minors in the College of Engineering\n• College of Fine ArtsCollege of Fine Arts Interdisciplinary CoursesMinors Offered by the College of Fine ArtsSchool of ArchitectureSchool of ArtSchool of DesignSchool of DramaSchool of Music\n• College of Fine Arts Interdisciplinary Courses\n• Minors Offered by the College of Fine Arts\n• School of Architecture\n• School of Art\n• School of Design\n• School of Drama\n• School of Music\n• Dietrich College of Humanities and Social SciencesDepartment of EnglishDepartment of HistoryThe Major in Information SystemsCarnegie Mellon Institute for Strategy and TechnologyDepartment of Languages, Cultures and Applied LinguisticsDepartment of PhilosophyDepartment of PsychologyDepartment of Social and Decision SciencesDepartment of Statistics and Data ScienceDietrich College Interdisciplinary MajorsDietrich College Interdisciplinary MinorsDietrich College Interdisciplinary Courses\n• Department of English\n• Department of History\n• The Major in Information Systems\n• Carnegie Mellon Institute for Strategy and Technology\n• Department of Languages, Cultures and Applied Linguistics\n• Department of Philosophy\n• Department of Psychology\n• Department of Social and Decision Sciences\n• Department of Statistics and Data Science\n• Dietrich College Interdisciplinary Majors\n• Dietrich College Interdisciplinary Minors\n• Dietrich College Interdisciplinary Courses\n• Heinz College of Information Systems and Public Policy\n• Mellon College of ScienceDepartment of Biological Sciences Department of ChemistryDepartment of Mathematical SciencesDepartment of PhysicsMCS Interdisciplinary CoursesMinors Offered by the Mellon College of Science\n• Department of Biological Sciences\n• Department of Chemistry\n• Department of Mathematical Sciences\n• Department of Physics\n• MCS Interdisciplinary Courses\n• Minors Offered by the Mellon College of Science\n• School of Computer ScienceArtificial Intelligence ProgramComputational Biology ProgramComputer Science ProgramHuman-Computer Interaction ProgramRobotics ProgramSCS Additional MinorsSCS ConcentrationsSCS Courses\n• Artificial Intelligence Program\n• Computational Biology Program\n• Computer Science Program\n• Human-Computer Interaction Program\n• Robotics Program\n• SCS Additional Minors\n• SCS Concentrations\n• SCS Courses\n• Tepper School of BusinessUniversity CoreUndergraduate Business AdministrationUndergraduate Economics\n• University Core\n• Undergraduate Business Administration\n• Undergraduate Economics\n• Carnegie Mellon University in Qatar\n• CIT Interdisciplinary Courses\n• Department of Biomedical Engineering\n• Department of Chemical Engineering\n• Department of Civil and Environmental Engineering\n• Department of Electrical and Computer Engineering\n• Department of Engineering and Public Policy\n• Department of Materials Science and Engineering\n• Department of Mechanical Engineering\n• Integrated Innovation Institute\n• Engineering Minors for Non-Engineering Students\n• Undergraduate Designated Minors in the College of Engineering\n• College of Fine Arts Interdisciplinary Courses\n• Minors Offered by the College of Fine Arts\n• School of Architecture\n• School of Art\n• School of Design\n• School of Drama\n• School of Music\n• Department of English\n• Department of History\n• The Major in Information Systems\n• Carnegie Mellon Institute for Strategy and Technology\n• Department of Languages, Cultures and Applied Linguistics\n• Department of Philosophy\n• Department of Psychology\n• Department of Social and Decision Sciences\n• Department of Statistics and Data Science\n• Dietrich College Interdisciplinary Majors\n• Dietrich College Interdisciplinary Minors\n• Dietrich College Interdisciplinary Courses\n• Department of Biological Sciences\n• Department of Chemistry\n• Department of Mathematical Sciences\n• Department of Physics\n• MCS Interdisciplinary Courses\n• Minors Offered by the Mellon College of Science\n• Artificial Intelligence Program\n• Computational Biology Program\n• Computer Science Program\n• Human-Computer Interaction Program\n• Robotics Program\n• SCS Additional Minors\n• SCS Concentrations\n• SCS Courses\n• University Core\n• Undergraduate Business Administration\n• Undergraduate Economics\n• BXA Intercollege Degree ProgramsBXA Intercollege Program Courses\n• BXA Intercollege Program Courses\n• Carnegie Mellon University-Wide Studies Courses\n• BXA Intercollege Program Courses\n• Send Page to Printer\nPrint this page.\n• Download Page (PDF)The PDF will include all information unique to this page.",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "2024-2025 Undergraduate Catalog < Carnegie Mellon University",
      "url": "http://coursecatalog.web.cmu.edu/"
    },
    {
      "content": "[HEADING] Carnegie Mellon University School of Computer Science\n[HEADING] Admissions\n[HEADING] Post-Degree Placement\n(This data requires Javascript to display.)\nYou can also download this data in Excel format.\nIndividuals can be contacted using the SCS Directory: http://www.cs.cmu.edu/directory\n• Back to Master's Programs\n• Internships are typically taken away from campus during the summer semester; some programs allow on-campus summers without classes or tuition, typically involving research.\n• A culminating activity involves more work than most classes, draws on learning from the rest of the program, produces a document and presentation, and satisfies a graduation requirement.\n• After completion, professional program students typically obtain jobs in industry. Research program students typically enter Ph.D. programs.\n• Selectivity is the ratio of student applications offered acceptance over applications received; some programs' requirements may diminish qualified candidates significantly.\n• GRE score ranges are 25th percentile to 75th percentile; for example, 25% of the students offered acceptance by CMU had a score below the 25th percentile.\n• GRE quantitative and verbal are scored between 130 and 170 in one-point increments. GRE analytical is scored between 0 and 6 in 0.5 increments.\n• For percentiles of all test takers, see http://www.ets.org/s/gre/pdf/gre_guide_table1a.pdf\n• The scope of % female is the fraction of students offered acceptance by CMU who identify as female.\n• Enrolled includes deferrals from prior year who entered this year.\n• Data for students graduating in August 2022, December 2022 or May 2023. No salary statistics are reported when fewer than four salaries are reported.\n• Cont'd Educ means some graduates continued in another educational program (Ph.D.). Seeking means still seeking a desired destination.\n• By popularity means in order of the destinations receiving the most students. Employers are only listed if they hired two or more students.* Students who obtained a master's degree while enrolled in a Ph.D. program are omitted.\n[CARD]\nSearch",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "SCS Master's Programs Comparison",
      "url": "https://www.cs.cmu.edu/academics/masters/programs-comparison"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Prospective Students\n[HEADING] Prospective Student Information\n[HEADING] Visiting CMU\n[HEADING] New NSF Institute Will Help Mathematicians Harness AI, Advance Discoveries\n[HEADING] Alums Compete in World Championship With CMU Pipes and Drums\n[HEADING] Doctoral Thesis Oral Defense - Madhusudan Reddy Pittu\n[HEADING] August 7, 2025\n[HEADING] Carnegie Mellon University’s 4th Annual Data Analytics Day\n[HEADING] July 30, 2025\n[HEADING] CSD Faculty Meeting - September 2025\n[HEADING] September 11, 2025\nExplore information about our academic programs in Computer Science. We offer undergraduate, master's and doctoral degree studies.\nBachelor's Programs Overview\nSCS Undergraduate Programs\nHow to Apply\nTurn Tartan Overnight Weekends\nAP/IB/Cambridge Credit Information\nExternal Credit Transfer Information\nMaster's Programs Overview\nHow to Apply\nGraduate Education Office\nDoctoral Programs Overview\nHow to Apply\nAdmitted Doctoral Student Open House\nCSD PhD Blog\nGraduate Education Office\nCampus Map | Visitor Parking | Campus Tours | Campus Life\nPlease Note:\nThe CS undergraduate program is not currently doing in-person visits for prospective students.\nWith an investment from the National Science Foundation (NSF) and ad\nFairness, Diversity, Explainability, and Robustness for Algorithmic Decision-Making\n4th Annual Data Analytics Day\nCSD Faculty Meeting\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Bachelor's\n    \n\nBachelor's Programs OverviewSCS Undergraduate ProgramsHow to ApplyTurn Tartan Overnight WeekendsAP/IB/Cambridge Credit InformationExternal Credit Transfer Information\nCS_Sample_Curriculum_Schedule.pdf\n(109.93 KB)\n• Master's\n    \n\nMaster's Programs OverviewMaster of Science in Computer ScienceFifth Year Master's How to ApplyGraduate Education Office\n• Master of Science in Computer Science\n• Fifth Year Master's\n• Doctoral\n    \n\nDoctoral Programs OverviewPh.D. in Computer SciencePh.D. in Algorithms, Combinatorics and OptimizationPh.D. in Pure and Applied LogicHow to ApplyResidency and attendance on the Pittsburgh campus is required.The Computer Science Department does not offer online or remote doctoral degrees.Admitted applicants enter the program in the fall each year. The program does not admit students in the spring or summer.Admitted Doctoral Student Open HouseCSD PhD BlogGraduate Education Office\n• Ph.D. in Computer Science\n• Ph.D. in Algorithms, Combinatorics and Optimization\n• Ph.D. in Pure and Applied Logic\n• Residency and attendance on the Pittsburgh campus is required.\n• The Computer Science Department does not offer online or remote doctoral degrees.\n• Admitted applicants enter the program in the fall each year. The program does not admit students in the spring or summer.\n• Master of Science in Computer Science\n• Fifth Year Master's\n• Ph.D. in Computer Science\n• Ph.D. in Algorithms, Combinatorics and Optimization\n• Ph.D. in Pure and Applied Logic\n• Residency and attendance on the Pittsburgh campus is required.\n• The Computer Science Department does not offer online or remote doctoral degrees.\n• Admitted applicants enter the program in the fall each year. The program does not admit students in the spring or summer.\n• Prospective Students\n• Bachelor's Admissions\n• Master's Admissions\n• Doctoral Admissions\n[CARD]\nVisiting CMUCampus Map | Visitor Parking | Campus Tours | Campus LifePlease Note:The CS undergraduate program is not currently doing in-person visits for prospective students.",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Prospective Students | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/admissions/prospective-students"
    },
    {
      "content": "[HEADING] Carnegie Mellon University School of Computer Science\n[HEADING] All Master's Programs by Department\n[HEADING] Ray and Stephanie Lane Computational Biology Department\n[HEADING] Master of Science in Automated Science: Biological Experimentation\n[HEADING] Master of Science in Computational Biology\n[HEADING] Computer Science Department\n[HEADING] Master of Science in Computer Science\n[HEADING] Human-Computer Interaction Institute\n[HEADING] Master of Educational Technology and Applied Learning Sciences (METALS)\n[HEADING] Master of Human-Computer Interaction\n[HEADING] Master of Science in Product Management\n[HEADING] Language Technologies Institute\n[HEADING] Master of Computational Data Science\n[HEADING] Master of Science in Artificial Intelligence and Innovation\n[HEADING] Master of Science in Intelligent Information Systems\n[HEADING] Master of Science in Language Technologies\n[HEADING] Machine Learning Department\n[HEADING] Master of Science in Machine Learning\n[HEADING] Robotics Institute\n[HEADING] Master of Science in Computer Vision\n[HEADING] Master of Science in Robotics\n[HEADING] Master's in Robotic Systems Development\n[HEADING] Software and Societal Systems\n[HEADING] Master's in Privacy Engineering\n[HEADING] Master in Privacy Technology and Policy (Part-Time)\n[HEADING] Master of Software Engineering for Professionals\n[HEADING] Master of Software Engineering — Embedded Systems\n[HEADING] Master of Software Engineering — Scalable Systems\n[HEADING] Master of Software Engineering Online\n[HEADING] Joint Master of Software Engineering/MBA Program\n[HEADING] Learn More\n[HEADING] Get To Know Us\nSCS offers a wide range of professional and academic master's programs across its seven departments. Admissions and requirements vary by program and are determined by the program's home department.\nLinks to all departments and master's programs appear below. Additionally, our Master's Programs Comparison Data includes statistics, facts and other information for each program.\nIf you're interested in applying, be sure to visit our Graduate Admissions page for application instructions and frequently asked questions.\nThe M.S. in Automated Science program is the first of its kind and provides training for students to play roles in the development of highly automated systems for doing science. It provides training in the principles and hands-on use of robotic laboratory equipment, the fundamental computational biological methods for constructing predictive models in biology and medicine, and the methods of active machine learning and AI for automatically and iteratively choosing experiments to achieve a given goal. The program is designed for a diverse applicant pool and will be especially valuable to students with undergraduate degrees in biology seeking to gain advanced computational skills for jobs in the laboratory automation industry. Opportunities also exist for successful graduates to transition to Ph.D. programs.\nThe M.S. in Computational Biology program seeks to train the world's best computational biologists at the master's level. The curriculum provides both breadth and depth of training in computational biology, and is built on a solid foundation of biology, computer science, statistics and machine learning (data sciences). The program is designed for students with backgrounds in quantitative and/or life sciences. Students often participate in summer research internships in life sciences, industry or academic research laboratories. MSCB graduates are prepared for rewarding jobs in industry or to pursue their doctoral degrees at top universities.\nThe Master of Science in Computer Science (MSCS) program offers students with a bachelor's degree the opportunity to extend their training with advanced study in computer science. Applicants should possess basic analytic skills and a strong aptitude for mathematics, programming and logical reasoning. A bachelor's degree in computer science is not required, but some scientific, engineering or mathematical background is an important predictor of success.\nThis interdisciplinary program trains students to design, develop and evaluate evidence-based programs for learning in traditional and nontraditional settings. Graduates will be prepared to take key positions in corporations, universities and schools as designers, developers and evaluators of educational technologies, as well as learning engineers, curriculum developers, learning technology policy-makers and even chief learning officers.\nThe Master of Human-Computer Interaction (MHCI) program is the first in the world dedicated to preparing professionals for careers related to human-computer interaction, user-experience design and user-centered research. The MHCI program integrates service and design thinking into a rigorous HCI curriculum that prepares our students to design and guide the future of human and technology interactions.\nThis 12-month master's program, a joint effort with the university's Tepper School of Business, provides both the technical skills and business acumen students need to be successful in this high-demand area. A required internship and capstone project supply the practical skills students need to return to industry prepared for their new careers.\nThe Master of Computational Data Science (MCDS) concentrates on applying the scientific method to very large data systems. The degree focuses on scientific experimental design, data collection, data modeling and analysis, problem solving, and human-computer interaction. These problem areas are addressed through a core computer science curriculum consisting of software engineering, machine learning, statistics, large scale distributed systems, storage systems, etc. The degree trains technologists to create new large scale data science systems.\nThe Master of Science in Artificial Intelligence and Innovation (MSAII) equips you to identify potential artificial intelligence applications, and develop and deploy AI solutions to large practical problems. Students work in teams to implement AI systems that are responsive to market needs.\nThe Master of Science in Intelligent Information Systems (MIIS) degree focuses on recognizing and extracting meaning from text, spoken language, video, and other forms of unstructured information. It provides deep exposure to content analysis and machine learning.\nThe Master of Science in Language Technologies is a research-oriented degree in the areas of speech processing, language processing, information retrieval, machine translation and machine learning. Most MLT students are affiliated with an adviser's research project, in which they gain hands-on experience with advanced research and state-of-the-art software. An optional master's thesis project may also be chosen.\nThe world's first and top-ranked machine learning program gives students the tools they need to solve real-world problems by using advanced machine learning techniques and developing their own learning algorithms. This program includes three semesters of courses, plus an internship in industry or research with our world-class, interdisciplinary faculty. It strengthens students' skills in computer science and statistics to provide exceptional training for future leaders in the field.\nComputer vision is the study of acquiring and interpreting visual imagery. As the technology matures, its applications in industry continue to expand exponentially in areas of great commercial value. The goals of the 16-month (three semesters plus summer) MSCV program are to provide a robust set of courses encompassing current and emerging state-of-the-art computer vision topics that prepare students for careers in this field, and to facilitate hands-on experience through real research and development projects addressing current applications.\nThe robotics master of science program brings together areas of robotics research that would otherwise be spread across different departments or separate universities, preparing students to take a leading role in the research and development of future generations of integrated robotics technologies and systems.\nThe Master's in Robotic Systems Development (MRSD) is an advanced graduate degree with a combined technical/business focus for recent graduates/practicing professionals already engaged in, or wishing to enter, the robotics and automation field as practitioners in the commercial sector.\nThe Master's in Privacy Engineering (MPE) program is designed for computer scientists and engineers who wish to pursue careers as privacy engineers or technical privacy managers. Designed in close collaboration with industry and government, this program is intended for students who aspire to play a critical role in building privacy into future products, services and processes.\nThis program has two tracks:\nThis program is designed for software professionals with at least two years of experience who want to learn best practices in managing large, diverse software development projects with a focus on software architecture and software project management. The MSE program emphasizes increased industry engagement in small groups with greater elective flexibility.\nFor entry-level software developers with less than two years of experience, the MSE-ES program focuses on software design for Internet of Things and cyberphysical systems using microcontrollers with real-time actuators and sensors. The program includes a required summer internship and team project with professional mentors.\nDesigned for entry-level software developers with less than two years of experience, the MSE-SS program focuses on achieving business objectives through high-velocity, continuous integration for large-scale, data-intensive and intelligent systems. The program includes a required summer internship and team project with professional mentors.\nThis program is for software professionals based in the U.S. with at least two years of experience who want to learn best practices in managing large, diverse software development projects with a focus on software architecture and software project management. The MSE Online program is part-time and culminates in a reflective practice thesis.\nThe Master of Software Engineering/Master of Business Administration dual degree prepares MBA students with the advanced engineering, managerial, decision-making and communication skills necessary to advance to senior levels of technology strategist. This program is offered by SCS and CMU's Tepper School of Business.\n• 12-month track — This track begins in August and concludes the following August.\n• 16-month Applied Study track — This track begins in August and incorporates a summer internship, concluding in December the following year.\n• Master's Programs Comparison Data Sheet\n• Graduate Admissions\n• Fifth-Year and Accelerated Master's Programs (for CMU Undergraduates)\n• Meet Our Dean\n• Read Our News\n• Learn About the Dean's Advisory Committees\n• SCS Tour Policy\n• Office of International Education\n• All About CMU\n• Why Pittsburgh?\n[CARD]\nSearch",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Master's Programs",
      "url": "https://www.cs.cmu.edu/academics/masters/programs"
    },
    {
      "content": "[HEADING] 3-1-1 Integrated and Accelerated Master’s Degree Program\n[HEADING] 5 Years, 2 Degrees\n[HEADING] Graduate Curriculum Map for 3-1-1 BSBA/MBA\n[HEADING] Year 4 - Fall Semester\n[HEADING] Year 4 - Spring Semester\n[HEADING] Year 5 - Fall Semester\n[HEADING] Year 5 - Spring Semester\n[HEADING] Program Requirements & Application Process\n[HEADING] Questions?\nThe Tepper School of Business offers an integrated and accelerated Master of Business Administration (MBA) to CMU undergraduate students completing either a Business Administration major or an additional major in Business Administration.\nThis program represents a considerable savings in cost and time. Students attain further breadth and/or depth of knowledge in their area of study, broadening their post-graduation career opportunities.\nIf you are interested in the 3-1-1 program, we recommend that you complete the following steps:\nYou must have applicable work or internship experience\nEarn a \"B\" or higher in the following courses:\n70-257: Optimization for Business; or 21-257: Models & Methods for Optimization; or 21-292: Operations Research I\n73-102: Principles of Microeconomics\n70-122: Introduction to Accounting\n70-371: Operations Management\n70-381: Marketing I\n70-391: Finance\nApply and be admitted to the Tepper MBA program during your junior year.\nIt is preferred that 3-1-1 candidates apply in Round 2. However, we will also accept applications in Rounds 3 and 4.\nTest Scores Waiver will be granted on a case-by-case basis and are evaluated on the basis of academic readiness for the Tepper MBA.\n• 45-740 Managing People & Teams\n• 45-790 Management Presentations\n• 70-447 Client Consulting Project: Strategic Management of the Enterprise\n• Undergraduate Business course\n• 45-770 Corporate Strategy\n• 45-XXX MBA Elective\n• 70-447 Client Consulting Project: Strategic Management of the Enterprise\n• Undergraduate Business course\n• 45-701 Financial and Managerial Accounting II\n• 45-752 Statistical Decision Making\n• Undergraduate Business course\n• Undergraduate Business course\n• 45-741 Managing Networks and Organizations\n• 45-711 Global Economics\n• Undergraduate Business course\n• Undergraduate Business course\n• 45-745 Ethics and Leadership\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• 45-XXX MBA Elective\n• MBA Capstone\n• You must have applicable work or internship experience\n• Earn a \"B\" or higher in the following courses:\n\n\n70-257: Optimization for Business; or 21-257: Models & Methods for Optimization; or 21-292: Operations Research I\n\n\n73-102: Principles of Microeconomics\n\n\n70-122: Introduction to Accounting\n\n\n70-371: Operations Management\n\n\n70-381: Marketing I\n\n\n70-391: Finance\n• 70-257: Optimization for Business; or 21-257: Models & Methods for Optimization; or 21-292: Operations Research I\n• 73-102: Principles of Microeconomics\n• 70-122: Introduction to Accounting\n• 70-371: Operations Management\n• 70-381: Marketing I\n• 70-391: Finance\n• Apply and be admitted to the Tepper MBA program during your junior year.\n\n\nIt is preferred that 3-1-1 candidates apply in Round 2. However, we will also accept applications in Rounds 3 and 4.\n\n\nTest Scores Waiver will be granted on a case-by-case basis and are evaluated on the basis of academic readiness for the Tepper MBA.\n• It is preferred that 3-1-1 candidates apply in Round 2. However, we will also accept applications in Rounds 3 and 4.\n• Test Scores Waiver will be granted on a case-by-case basis and are evaluated on the basis of academic readiness for the Tepper MBA.\n• 70-257: Optimization for Business; or 21-257: Models & Methods for Optimization; or 21-292: Operations Research I\n• 73-102: Principles of Microeconomics\n• 70-122: Introduction to Accounting\n• 70-371: Operations Management\n• 70-381: Marketing I\n• 70-391: Finance\n• It is preferred that 3-1-1 candidates apply in Round 2. However, we will also accept applications in Rounds 3 and 4.\n• Test Scores Waiver will be granted on a case-by-case basis and are evaluated on the basis of academic readiness for the Tepper MBA.\n• Learn more about Tepper MBA Application Instructions\n• Apply\n• Building The Intelligent Future: Strategic Plan 2024-2030\n• Programs\n• Academic Calendar\n• Course List\n• Directions\n• Contact Us\n• Privacy Policy\n• Statement of Assurance\n• Tepper Information Center\n• Alumni\n• Recruiters\n• Tepper Store\n[HTML_TABLE]\nYears 1-3 | CMU undergraduate courses\nYear 4 | Integrated undergraduate & graduate study\nYear 5 | Graduate MBA coursework at Tepper",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Integrated and Accelerated Master’s Degree (3-1-1) - \n                Tepper School of Business - Carnegie Mellon University",
      "url": "https://www.cmu.edu/tepper/programs/mba/curriculum/dual-and-joint-degrees/3-1-1-mba.html"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Doctoral Programs\n[HEADING] Ph.D. in Computer Science\n[HEADING] Interdisciplinary Ph.D. Programs\n[HEADING] In-residence Participation Required\nThe Computer Science Department offers the Ph.D. in Computer Science at our Pittsburgh campus and a selection of interdisciplinary degrees.\nOur program is frequently named one of the best in the country and among our alumni are numerous pioneers in the field.\nCarnegie Mellon's Ph.D. in Computer Science is, above all, a research degree. When the faculty award a degree, they certify that the student has a broad foundation and awareness of core concepts in computer science, has advanced the field by performing significant original research and has reported that work in a scholarly fashion.\nFull Program Information\nIn addition to our Ph.D. in Computer Science and the dual degree with Portugal, we also offer three interdisciplinary programs:\nPh.D. in Computer Science with Certificate in Neural Basis of Cognition — with the Center for the Neural Basis of Cognition (CNBC). The Center for the Neural Basis of Cognition Training Program is an interdisciplinary graduate training program operated jointly by Carnegie Mellon University and the University of Pittsburgh. Students interested in this track should also consider applying to the Ph.D. in Neural Computation at the Neuroscience Institute.\nPh.D. in Algorithms, Combinatorics and Optimization (ACO) — administered jointly by the Computer Science Department (Algorithms and Complexity group), the Tepper School of Business (Operations Research group), and the Department of Mathematical Sciences (Discrete Mathematics group).\nPh.D. in Pure and Applied Logic (PAL) — administered by the Computer Science Department, the Department of Mathematical Sciences, and the Department of Philosophy.\nPh.D. Dual Degree Portugal - By enrolling in the dual degree Ph.D. Program in Computer Science, students experience the advantages of collaborative research between top-tier research institutions. The program’s high scientific standards serve to educate high-quality researchers, instructors, and innovators in the field of Computer Science.\nAll doctoral programs offered by the Computer Science Department require in-person attendance on our Pittsburgh Campus. No remote doctoral degrees are available from the department.\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Academics\n\n\nCurrent Courses\n\n\nUpcoming Semester Courses\n\n\nSchedule of Classes\n\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n\n\nPh.D. in Computer Science\n\n\nPh.D. in ACO\n\n\nPh.D. in PAL\n\n\nCNBC Certificate Program\n\n\nPh.D. Dual Degree Portugal\n\n\nDoctoral - How to Apply\n\n\nCore CSD Advisors\n\n\nDegrees Conferred\n\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n[CARD]\nPh.D. in Computer ScienceOur program is frequently named one of the best in the country and among our alumni are numerous pioneers in the field. Carnegie Mellon's Ph.D. in Computer Science is, above all, a research degree. When the faculty award a degree, they certify that the student has a broad foundation and awareness of core concepts in computer science, has advanced the field by performing significant original research and has reported that work in a scholarly fashion.Full Program Information\n[CARD]\nInterdisciplinary Ph.D. ProgramsIn addition to our Ph.D. in Computer Science and the dual degree with Portugal, we also offer three interdisciplinary programs:Ph.D. in Computer Science with Certificate in Neural Basis of Cognition — with the Center for the Neural Basis of Cognition (CNBC). The Center for the Neural Basis of Cognition Training Program is an interdisciplinary graduate training program operated jointly by Carnegie Mellon University and the University of Pittsburgh. Students interested in this track should also consider applying to the Ph.D. in Neural Computation at the Neuroscience Institute.Ph.D. in Algorithms, Combinatorics and Optimization (ACO) — administered jointly by the Computer Science Department (Algorithms and Complexity group), the Tepper School of Business (Operations Research group), and the Department of Mathematical Sciences (Discrete Mathematics group).  Ph.D. in Pure and Applied Logic (PAL) — administered by the Computer Science Department, the Department of Mathematical Sciences, and the Department of Philosophy.  Ph.D. Dual Degree Portugal - By enrolling in the dual degree Ph.D. Program in Computer Science, students experience the advantages of collaborative research between top-tier research institutions. The program’s high scientific standards serve to educate high-quality researchers, instructors, and innovators in the field of Computer Science.\n[CARD]\nIn-residence Participation RequiredAll doctoral programs offered by the Computer Science Department require in-person attendance on our Pittsburgh Campus. No remote doctoral degrees are available from the department.",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Doctoral Programs | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/doctoral/overview"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Master's Programs Contacts\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Academics\n\n\nCurrent Courses\n\n\nUpcoming Semester Courses\n\n\nSchedule of Classes\n\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n• Master's Programs\n\n\nM.S. in Computer Science\n\n\nFifth Year Master's\n\n\nAccelerated MBA Program\n\n\nMaster's - How to Apply\n\n\nMaster's Programs Contacts\n\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n• Student Resources\n[HTML_TABLE]\nName | Title\nRuben Martins | Program Director\nDavid Eckhardt | Associate Program Director\nAngy Malloy | Program Administrator\n[HTML_TABLE]\nName | Title\nPeter Steenkiste | Program Director\nTracy Farbacher | Program Administrator\n[HTML_TABLE]\nName | Title\nGina Cecchetti | Associate Director",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Master's Programs Contacts | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/masters/ms-program-contacts"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Master's Programs Admissions\n[HEADING] MSCS Admissions\n[HEADING] MSCS Application Process\n[HEADING] Fifth Year M.S. Admissions\n[HEADING] Fall 2025 application:\n[HEADING] Spring 2026 application:\n[HEADING] 5th Year M.S. Application Process\nThe admissions processes for our master's options vary. Students applying to the Master’s program in Computer Science must apply online.\nThe Master of Science in Computer Science (MSCS) program uses the School of Computer Science online application for admissions. Students are admitted for the fall semester and cannot begin in the spring.\nYou must submit the following with your application.\nGraduate Record Examination (GRE):\nThe GRE is strongly recommended in order to apply to the MSCS program, especially for students who do not have clear documentation of strong mathematical proficiency. If you cannot provide GRE scores, please briefly explain in your statement of purpose.\nGRE scores are waived for applicants who have graduated from, or are enrolled at, Carnegie Mellon University.\nThe GRE at Home Test is not accepted unless the score date is between January 1, 2020 and May 31, 2021; or between August 1, 2022 and December 31, 2022. If you are submitting at-home GRE scores, describe the circumstances which made that necessary in your Statement of Purpose.\nTOEFL or IELTS Test:\nIf you will be studying on an F-1 or J-1 visa, and English is not a native language for you (native language is defined as spoken at home from birth), we are required to formally evaluate your English proficiency via one of these standardized tests:\nWe do not accept the \"TOEFL ITP Plus for China,” since speaking is not scored. Applicants currently in mainland China are encouraged to take the IELTS test.\nThe Computer Science Department follows the Language Proficiency Policy set by the School of Computer Science and does not issue waivers for non-native English speakers.\nPlease refer to details on the School of Computer Science Graduate Admissions webpage.\nTranscripts: A PDF of your most recent transcript from each college and/or university you attended, even if no degree was granted.\nResume/CV: Please submit in PDF format.\nStatement of Purpose: Provide a concise one- or two-page essay describing your primary research interests, related experiences and objective in pursuing a Masters in computer science.\nThree letters of recommendation: At least two letters should be from faculty or recent employers.\nWe expect all applicants to submit payment with their online application. Information about possible fee waivers will be displayed when you select a program during the online application process.\nTo apply to the Master of Science in Computer Science (MSCS) program please use the School of Computer Science Online Application. Students are admitted for the fall semester and cannot begin in the spring.\nFor more on the application process, please refer to the School of Computer Science Graduate Admissions webpage\nFor general questions about applying to master's degree programs in the School of Computer Science contact: https://www.cs.cmu.edu/about-scs/contact\nScholarships and financial assistance to the Master of Science Program are not offered by the program at this time.\nGeneral financial information is available via the following resources:\nGraduate Tuition and Fees:https://www.cmu.edu/sfs/tuition/graduate/scs.html\nCarnegie Mellon Graduate Student Financial Aid:https://www.cmu.edu/sfs/financial-aid/graduate/index.html\nThe program has the following admissions deadlines:\nApplication Opens: Wednesday, September 3, 2025\nApplication Deadline: Monday, October 27, 2025\nApplication Opens: Wednesday, February 4, 2026\nApplication Deadline: Monday, March 6, 2026\nStudents who have been admitted can start the 5th year master's degree program in any of the three semesters (Fall, Spring, or Summer) following the semester in which they were admitted.\nThe Fifth Year Master’s Program is open only to undergraduate students completing a B.S. or additional major in Computer Science. Students must provide:\nThere is no application fee to apply for the Fifth Year Master's Program\nTo apply to the Fifth Year Master of Science in Computer Science program please use the School of Computer Science Online Application.\nThe Fifth Year M.S. Program does not offer scholarships or financial assistance.  However, some research advisors may be able to provide funding.  Students should discuss funding with their research advisor before they apply.\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• The application for Fall 2026 opens: Sept. 3, 2025\n• Early Deadline: Nov. 19, 2025 (3 p.m. EST)\n• Final Deadline: Dec. 10, 2025 (3 p.m. EST)\n• Admissions Requirements - Test Scores, Transcripts & Documents\n    \n\n You must submit the following with your application.Graduate Record Examination (GRE): The GRE is strongly recommended in order to apply to the MSCS program, especially for students who do not have clear documentation of strong mathematical proficiency. If you cannot provide GRE scores, please briefly explain in your statement of purpose.GRE scores are waived for applicants who have graduated from, or are enrolled at, Carnegie Mellon University. The GRE at Home Test is not accepted unless the score date is between January 1, 2020 and May 31, 2021; or between August 1, 2022 and December 31, 2022. If you are submitting at-home GRE scores, describe the circumstances which made that necessary in your Statement of Purpose.TOEFL or IELTS Test: If you will be studying on an F-1 or J-1 visa, and English is not a native language for you (native language is defined as spoken at home from birth), we are required to formally evaluate your English proficiency via one of these standardized tests: TOEFL (preferred)IELTSDuolingoWe do not accept the \"TOEFL ITP Plus for China,” since speaking is not scored. Applicants currently in mainland China are encouraged to take the IELTS test. The Computer Science Department follows the Language Proficiency Policy set by the School of Computer Science and does not issue waivers for non-native English speakers.Please refer to details on the School of Computer Science Graduate Admissions webpage.Transcripts: A PDF of your most recent transcript from each college and/or university you attended, even if no degree was granted.Resume/CV: Please submit in PDF format.Statement of Purpose: Provide a concise one- or two-page essay describing your primary research interests, related experiences and objective in pursuing a Masters in computer science.Three letters of recommendation: At least two letters should be from faculty or recent employers.\n• TOEFL (preferred)\n• IELTS\n• Duolingo\n• Application Fee\n    \n\nEarly application deadline fee $80 per program.Application fee after November 19, 2025, $100 per program.We expect all applicants to submit payment with their online application. Information about possible fee waivers will be displayed when you select a program during the online application process.\n• Early application deadline fee $80 per program.\n• Application fee after November 19, 2025, $100 per program.\n• Online Application - APPLY\n    \n\nTo apply to the Master of Science in Computer Science (MSCS) program please use the School of Computer Science Online Application. Students are admitted for the fall semester and cannot begin in the spring. For more on the application process, please refer to the School of Computer Science Graduate Admissions webpageFor general questions about applying to master's degree programs in the School of Computer Science contact: https://www.cs.cmu.edu/about-scs/contact\n• Financial Information\n    \n\nScholarships and financial assistance to the Master of Science Program are not offered by the program at this time.General financial information is available via the following resources:Graduate Tuition and Fees:https://www.cmu.edu/sfs/tuition/graduate/scs.htmlCarnegie Mellon Graduate Student Financial Aid:https://www.cmu.edu/sfs/financial-aid/graduate/index.html\n• TOEFL (preferred)\n• IELTS\n• Duolingo\n• Early application deadline fee $80 per program.\n• Application fee after November 19, 2025, $100 per program.\n• Application Opens: Wednesday, September 3, 2025\n• Application Deadline: Monday, October 27, 2025\n• Application Opens: Wednesday, February 4, 2026\n• Application Deadline: Monday, March 6, 2026\n• Admissions Requirements\n    \n\nThe Fifth Year Master’s Program is open only to undergraduate students completing a B.S. or additional major in Computer Science. Students must provide:A 1-2 page curriculum vitae.A letter of recommendation from your research advisor.Students from the Qatar campus who have not yet identified an advisor can instead have a letter of recommendation from any faculty member familiar with their research.A second letter of recommendation. This letter can come from another faculty member or possibly an outside source (eg., supervisor from a summer internship).A two-page statement that covers the following three areas:A short description of your career goals.An overview of your research experience and how it prepared you for this program.A description of the research you plan to undertake if accepted into the Fifth Year Master’s ProgramStudents who are working towards a BS in AI from CMU should also include a short paragraph describing how they will satisfy the additional breadth requirementsA Carnegie Mellon transcript. An unofficial copy of your transcript is acceptable.\n• A 1-2 page curriculum vitae.\n• A letter of recommendation from your research advisor.\n• Students from the Qatar campus who have not yet identified an advisor can instead have a letter of recommendation from any faculty member familiar with their research.\n• A second letter of recommendation. This letter can come from another faculty member or possibly an outside source (eg., supervisor from a summer internship).\n• A two-page statement that covers the following three areas:A short description of your career goals.An overview of your research experience and how it prepared you for this program.A description of the research you plan to undertake if accepted into the Fifth Year Master’s ProgramStudents who are working towards a BS in AI from CMU should also include a short paragraph describing how they will satisfy the additional breadth requirements\n• A short description of your career goals.\n• An overview of your research experience and how it prepared you for this program.\n• A description of the research you plan to undertake if accepted into the Fifth Year Master’s Program\n• Students who are working towards a BS in AI from CMU should also include a short paragraph describing how they will satisfy the additional breadth requirements\n• A Carnegie Mellon transcript. An unofficial copy of your transcript is acceptable.\n• Application Fee\n    \n\nThere is no application fee to apply for the Fifth Year Master's Program\n• Application Submission - APPLY\n    \n\nTo apply to the Fifth Year Master of Science in Computer Science program please use the School of Computer Science Online Application.\n• Financial Information\n    \n\nThe Fifth Year M.S. Program does not offer scholarships or financial assistance.  However, some research advisors may be able to provide funding.  Students should discuss funding with their research advisor before they apply.General financial information is available via the following resources:Graduate Tuition and Fees:https://www.cmu.edu/sfs/tuition/graduate/scs.htmlCarnegie Mellon Graduate Student Financial Aid:https://www.cmu.edu/sfs/financial-aid/graduate/index.html\n• A 1-2 page curriculum vitae.\n• A letter of recommendation from your research advisor.\n• Students from the Qatar campus who have not yet identified an advisor can instead have a letter of recommendation from any faculty member familiar with their research.\n• A second letter of recommendation. This letter can come from another faculty member or possibly an outside source (eg., supervisor from a summer internship).\n• A two-page statement that covers the following three areas:A short description of your career goals.An overview of your research experience and how it prepared you for this program.A description of the research you plan to undertake if accepted into the Fifth Year Master’s ProgramStudents who are working towards a BS in AI from CMU should also include a short paragraph describing how they will satisfy the additional breadth requirements\n• A short description of your career goals.\n• An overview of your research experience and how it prepared you for this program.\n• A description of the research you plan to undertake if accepted into the Fifth Year Master’s Program\n• Students who are working towards a BS in AI from CMU should also include a short paragraph describing how they will satisfy the additional breadth requirements\n• A Carnegie Mellon transcript. An unofficial copy of your transcript is acceptable.\n• A short description of your career goals.\n• An overview of your research experience and how it prepared you for this program.\n• A description of the research you plan to undertake if accepted into the Fifth Year Master’s Program\n• Students who are working towards a BS in AI from CMU should also include a short paragraph describing how they will satisfy the additional breadth requirements\n• Prospective Students\n• Bachelor's Admissions\n• Master's Admissions\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n• Master's Programs\n[CARD]\nMSCS AdmissionsThe Master of Science in Computer Science (MSCS) program uses the School of Computer Science online application for admissions. Students are admitted for the fall semester and cannot begin in the spring.The application for Fall 2026 opens: Sept. 3, 2025Early Deadline: Nov. 19, 2025 (3 p.m. EST)Final Deadline: Dec. 10, 2025 (3 p.m. EST)\n[CARD]\nFifth Year M.S. AdmissionsThe program has the following admissions deadlines:Fall 2025 application:Application Opens: Wednesday, September 3, 2025Application Deadline: Monday, October 27, 2025 Spring 2026 application:Application Opens: Wednesday, February 4, 2026Application Deadline: Monday, March 6, 2026Students who have been admitted can start the 5th year master's degree program in any of the three semesters (Fall, Spring, or Summer) following the semester in which they were admitted.",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Master's Programs Admissions | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/masters/admissions"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Bachelor's Programs\n[HEADING] B.S. in Computer Science\n[HEADING] Requirements\n[HEADING] SCS Undergraduate Majors\nEach year, the School of Computer Science admits students to undergraduate programs ranging from a traditional B.S. in computer science to a bachelor of computer science and arts.\nWhatever option you choose, you’re guaranteed to find a rigorous program dedicated to the real-world training and practical problem solving that has been the hallmark of computer science education at CMU since its inception.\nCarnegie Mellon's undergraduate major in computer science combines a solid core of computer science courses with the ability to gain substantial depth in another area through a required minor in a second subject. The curriculum also gives you numerous choices for science and humanities courses. Computing is a discipline with strong links to many fields, and our program gives you unparalleled flexibility to pursue these fields. Our mathematics and probability component ensures that you'll have the formal tools to remain current as technologies and systems change, but at the same time you'll gain insight into the practical issues of building and maintaining systems by participating in intensive project-oriented courses.\nUnlike other universities, where research rarely occurs at the undergraduate level, CMU CS students often have part-time or summer jobs — or receive independent study credit — working on research while pursuing their bachelor's degree. If you're interested in a research/graduate school career, we offer an intensive course of research, equivalent to four classroom courses, culminating in the preparation of a senior research honors thesis.\nCurrent Computer Science Undergraduate Curriculum\nComputer Science Undergraduate curriculum information for prior years are available on the Previous Course Catalogs webpage.\nHow to Apply\nIncluding the B.S. in CS, the School of Computer Science offers five bachelor's degrees.\nInformation on the other four degrees can be found on the respective websites for the degree:\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Artificial Intelligence\n• Computational Biology\n• Human-Computer Interaction\n• Robotics\n• Academics\n\n\nCurrent Courses\n\n\nUpcoming Semester Courses\n\n\nSchedule of Classes\n\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\n\nHow to Apply as Incoming First-Year\n\n\nB.S. in CS Curriculum\n\n\nB.S. in CS Concentrations\n\n\nB.S. in CS External Course Transfer\n\n\nB.S. in CS Program Contacts\n\n\nGuidelines for Internal Transfer or Dual Degree\n\n\nMinor and Additional Major in Computer Science\n\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n• Doctoral Programs\n• Student Resources\n[CARD]\nB.S. in Computer ScienceCarnegie Mellon's undergraduate major in computer science combines a solid core of computer science courses with the ability to gain substantial depth in another area through a required minor in a second subject. The curriculum also gives you numerous choices for science and humanities courses. Computing is a discipline with strong links to many fields, and our program gives you unparalleled flexibility to pursue these fields. Our mathematics and probability component ensures that you'll have the formal tools to remain current as technologies and systems change, but at the same time you'll gain insight into the practical issues of building and maintaining systems by participating in intensive project-oriented courses.Unlike other universities, where research rarely occurs at the undergraduate level, CMU CS students often have part-time or summer jobs — or receive independent study credit — working on research while pursuing their bachelor's degree. If you're interested in a research/graduate school career, we offer an intensive course of research, equivalent to four classroom courses, culminating in the preparation of a senior research honors thesis.RequirementsCurrent Computer Science Undergraduate Curriculum \nCS_Sample_Curriculum_Schedule.pdf\n(109.93 KB)\n\nComputer Science Undergraduate curriculum information for prior years are available on the Previous Course Catalogs webpage.How to Apply\n[CARD]\nSCS Undergraduate MajorsIncluding the B.S. in CS, the School of Computer Science offers five bachelor's degrees.Information on the other four degrees can be found on the respective websites for the degree:Artificial IntelligenceComputational BiologyHuman-Computer InteractionRobotics",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Bachelor's Programs | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/bachelors/overview"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Fall 2025 Courses\n[HEADING] Courses & Curriculum Related Resources\nFall 2025 registration week is April 7-11 2025. See the HUB steps to register for guidance.\nYou can toggle for Graduate or Undergraduate or search by course number.\nCurrent Semester Courses | Fall 2025 Courses\nStudent Resources | Doctoral Breadth Courses\nMSCS Handbook | Fifth Year Master's Handbook | Ph.D. Handbook\nSchedule of Classes | Undergraduate Curriculum Requirements | Undergraduate Catalog\nInstructor(s)\nThomas Cortina\nClick to read more...\nInstructor(s)\nMark Stehlik\nClick to read more...\nAn introduction to fundamental computing principles and programming techniques for creative cultural practices, with special consideration to applications in music, design and the visual arts. Intended for students with little to no prior programming experience, the course develops skills and understanding of text-based programming in a procedural style, including idioms of sequencing, selection, iteration, and recursion.\nInstructor(s)\nThomas Cortina\nClick to read more...\nInstructor(s)\nFranceska XhakajKelly Rivers\nClick to read more...\nA technical introduction to the fundamentals of programming with an emphasis on producing clear, robust, and reasonably efficient code using top-down design, informal analysis, and effective testing and debugging. Starting from first principles, we will cover a large subset of the Python programming language, including its standard libraries and programming paradigms. We will also target numerous deployment scenarios, including standalone programs, shell scripts, and web-based applications. This course assumes no prior programming experience. Even so, it is a fast-paced and rigorous preparation for 15-122. Students seeking a more gentle introduction to computer science should consider first taking 15-110. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\nInstructor(s)\nDavid KosbieMichael Taylor\nClick to read more...\nInstructor(s)\nFranceska Xhakaj\nClick to read more...\nInstructor(s)\nIliano CervesatoAnne Kohlbrenner\nClick to read more...\nInstructor(s)\nZeliha Dilsun KaynarStephanie Balzer\nClick to read more...\nInstructor(s)\nJohn MackeyWilliam Kuszmaul\nClick to read more...\nInstructor(s)\nDanny Sleator\nClick to read more...\nInstructor(s)\nCharlie GarrodGuy Blelloch\nClick to read more...\nInstructor(s)\nBrian RailingPhillip Gibbons\nClick to read more...\nInstructor(s)\nRyan O'DonnellAnil Ada\nClick to read more...\nInstructor(s)\nFeras SaadKlaus Sutner\nClick to read more...\nInstructor(s)\nPatrick Virtue\nClick to read more...\nInstructor(s)\nDavid Touretzky\nClick to read more...\nInstructor(s)\nDanny Sleator\nClick to read more...\nInstructor(s)\nRobert Harper\nClick to read more...\nInstructor(s)\nClick to read more...\nInstructor(s)\nMajd SakrSeth Goldstein\nClick to read more...\nInstructor(s)\nElaine ShiRiccardo Paccagnella\nClick to read more...\nInstructor(s)\nBrian Railing\nClick to read more...\nInstructor(s)\nDan DeBlasio\nClick to read more...\nInstructor(s)\nAayush Jain\nClick to read more...\nInstructor(s)\nOscar Dadfar\nClick to read more...\nInstructor(s)\nClick to read more...\nInstructor(s)\nTai-Sing Lee\nClick to read more...\nInstructor(s)\nDavid Touretzky\nClick to read more...\nInstructor(s)\nDave EckhardtBabu Pillai\nClick to read more...\nInstructor(s)\nDave Eckhardt\nClick to read more...\nMany CS and ECE students will be developing software and hardware that must be ultra reliable at some point in their careers. Logical errors in such designs can be costly, even life threatening. There have already been a number of well publicized errors like the Intel Pentium floating point error and the Arian 5 crash. In this course we will study tools for finding and preventing logical errors. Three types of tools will be studied: automated theorem proving, state exploration techniques like model checking and tools based on static program analysis. Although students will learn the theoretical basis for such tools, the emphasis will be on actually using them on real examples. This course can be used to satisfy the Logic & Languages requirement for the Computer Science major.\nInstructor(s)\nMatt Fredrikson\nClick to read more...\nInstructor(s)\nZhihao JiaDimitrios Skarlatos\nClick to read more...\nInstructor(s)\nHeather MillerWenting ZhengPeter Steenkiste\nClick to read more...\nInstructor(s)\nJustine Sherry\nClick to read more...\nInstructor(s)\nAndrew Pavlo\nClick to read more...\nInstructor(s)\nDanny SleatorDaniel Anderson\nClick to read more...\nComputational photography is the convergence of computer graphics, computer vision and imaging. Its role is to overcome the limitations of the traditional camera, by combining imaging and computation to enable new and enhanced ways of capturing, representing, and interacting with the physical world. This advanced undergraduate course provides a comprehensive overview of the state of the art in computational photography. At the start of the course, we will study modern image processing pipelines, including those encountered on mobile phone and DSLR cameras, and advanced image and video editing algorithms. Then we will proceed to learn about the physical and computational aspects of tasks such as 3D scanning, coded photography, lightfield imaging, time-of-flight imaging, VR/AR displays, and computational light transport. Near the end of the course, we will discuss active research topics, such as creating cameras that capture video at the speed of light, cameras that look around walls, or cameras that can see through tissue. The course has a strong hands-on component, in the form of seven homework assignments and a final project. In the homework assignments, students will have the opportunity to implement many of the techniques covered in the class, by both acquiring their own images of indoor and outdoor scenes and developing the computational tools needed to extract information from them. For their final projects, students will have the choice to use modern sensors provided by the instructors (lightfield cameras, time-of-flight cameras, depth sensors, structured light systems, etc.). This course requires familiarity with linear algebra, calculus, programming, and doing computations with images. The course does not require prior experience with photography or imaging.\nInstructor(s)\nIoannis Gkioulekas\nClick to read more...\nInstructor(s)\nJames McCann\nClick to read more...\nInstructor(s)\nOscar Dadfar\nClick to read more...\nInstructor(s)\nReid Simmons\nClick to read more...\nThis course will provide some implementation motivated perspectives on algebraic and numerical algorithms, and will somewhat follow the Complexity and Linear Algebra semester program at the Simons Institute (https://simons.berkeley.edu/programs/complexity-linear-algebra).\nIt will normally meet on Wednesdays and Fridays, with some Monday meetings to fit the schedule of the program.\nInstructor(s)\nRichard Peng\nClick to read more...\nInstructor(s)\nBrian RailingPhillip Gibbons\nClick to read more...\nInstructor(s)\nKlaus SutnerFeras Saad\nClick to read more...\nInstructor(s)\nMark Stehlik\nClick to read more...\nInstructor(s)\nMark Stehlik\nClick to read more...\nInstructor(s)\nMark Stehlik\nClick to read more...\nInstructor(s)\nDave EckhardtRuben Martins\nClick to read more...\nInstructor(s)\nDave EckhardtBabu Pillai\nClick to read more...\nInstructor(s)\nDave Eckhardt\nClick to read more...\nMany CS and ECE students will be developing software and hardware that must be ultra reliable at some point in their careers. Logical errors in such designs can be costly, even life threatening. There have already been a number of well publicized errors like the Intel Pentium floating point error and the Ariane 5 crash. In this course we will study tools for finding and preventing logical errors. Three types of tools will be studied: automated theorem proving, state exploration techniques like model checking and tools based on static program analysis. Although students will learn the theoretical basis for such tools, the emphasis will be on actually using them on real examples.  This course can be used to satisfy the Logic & Languages requirement for the Computer Science major.\nInstructor(s)\nMatt Fredrikson\nClick to read more...\nInstructor(s)\nZhihao JiaDimitrios Skarlatos\nClick to read more...\nInstructor(s)\nSeth GoldsteinMajd Sakr\nClick to read more...\nInstructor(s)\nDave EckhardtRuben Martins\nClick to read more...\nInstructor(s)\nHeather MillerPeter SteenkisteWenting Zheng\nClick to read more...\nInstructor(s)\nJustine Sherry\nClick to read more...\nInstructor(s)\nAndrew Pavlo\nClick to read more...\nInstructor(s)\nDan DeBlasio\nClick to read more...\nInstructor(s)\nDanny SleatorDaniel Anderson\nClick to read more...\nInstructor(s)\nRobert Harper\nClick to read more...\nInstructor(s)\nClick to read more...\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n[CARD]\nCourses & Curriculum Related ResourcesCurrent Semester Courses | Fall 2025 CoursesStudent Resources | Doctoral Breadth CoursesMSCS Handbook | Fifth Year Master's Handbook | Ph.D. HandbookSchedule of Classes | Undergraduate Curriculum Requirements | Undergraduate Catalog\n[CARD]\n15050\n\n\t\t\t\nStudy Abroad\n15050\n\n\t\t\t\nStudy Abroad\n\n\n\n\t\t\n\t\t\tStudents who are interested in studying abroad should first contact the Office of International Education. More information on Study Abroad is available on OIE's Study Abroad page and at the CS Undergraduate Office.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nThomas Cortina\n\nClick to read more...\n[CARD]\n15090\n\n\t\t\t\nComputer Science Practicum\n\n\n\t\t\t\t\t\t\t\t\t\n            3\n15090\n\n\t\t\t\nComputer Science Practicum\n\n\n\t\t\t\t\t\t\t\t\t\n            3\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is for Computer Science students who wish to have an  internship experience as part of their curriculum. Students are required  to write a one-page summary statement prior to registration that  explains how their internship connects with their CS curriculum,  specifically on how it uses material they have learned as well as  prepares them for future courses. Near the end of the internship,  students will be required to submit a reflection paper that describes  the work they did in more detail, including lessons learned about the  work experience and how they utilized their CS education to work  effectively. International students should consult with the Office of  International Education for appropriate paperwork and additional  requirements before registration. Units earned count toward the total  required units necessary for degree completion; students should speak  with an academic advisor for details. This course may be taken at most 3  times for a total of 9 units maximum. Students normally register for  this course for use during the summer semester.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMark Stehlik\n\nClick to read more...\n[CARD]\n15104\n\n\t\t\t\nIntroduction to Computing for Creative Practice\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n15104\n\n\t\t\t\nIntroduction to Computing for Creative Practice\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n      \n\t\t\t\t\t\t\t\n\n\nAn introduction to fundamental computing principles and programming techniques for creative cultural practices, with special consideration to applications in music, design and the visual arts. Intended for students with little to no prior programming experience, the course develops skills and understanding of text-based programming in a procedural style, including idioms of sequencing, selection, iteration, and recursion.  \n\n\n\nInstructor(s)\n\nThomas Cortina\n\nClick to read more...\n[CARD]\n15110\n\n\t\t\t\nPrinciples of Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n15110\n\n\t\t\t\nPrinciples of Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tA course in fundamental computing principles for students with minimal or no  computing background. Programming constructs: sequencing, selection,  iteration, and recursion. Data organization: arrays and lists. Use of  abstraction in computing: data representation, computer organization,  computer networks, functional decomposition, and application programming  interfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems  based on complexity, non-computable functions, and using heuristics to  find reasonable solutions to complex problems. Social, ethical and legal  issues associated with the development of new computational artifacts will  also be discussed.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nFranceska XhakajKelly Rivers\n\nClick to read more...\n[CARD]\n15112\n\n\t\t\t\nFundamentals of Programming and Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15112\n\n\t\t\t\nFundamentals of Programming and Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\nA technical introduction to the fundamentals of programming with an emphasis on producing clear, robust, and reasonably efficient code using top-down design, informal analysis, and effective testing and debugging. Starting from first principles, we will cover a large subset of the Python programming language, including its standard libraries and programming paradigms. We will also target numerous deployment scenarios, including standalone programs, shell scripts, and web-based applications. This course assumes no prior programming experience. Even so, it is a fast-paced and rigorous preparation for 15-122. Students seeking a more gentle introduction to computer science should consider first taking 15-110. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\n\n\n\nInstructor(s)\n\nDavid KosbieMichael Taylor\n\nClick to read more...\n[CARD]\n15121\n\n\t\t\t\nIntroduction to Data Structures\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n15121\n\n\t\t\t\nIntroduction to Data Structures\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tA continuation of the process of program design and analysis for  students with some prior programming experience (functions, loops, and  arrays, not necessarily in Java). The course reinforces object-oriented  programming techniques in Java and covers data aggregates, data  structures (e.g., linked lists, stacks, queues, trees, and graphs), and  an introduction to the analysis of algorithms that operate on those data  structures.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nFranceska Xhakaj\n\nClick to read more...\n[CARD]\n15122\n\n\t\t\t\nPrinciples of Imperative Computation\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15122\n\n\t\t\t\nPrinciples of Imperative Computation\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tFor students with a basic understanding of programming (variables, expressions, loops, arrays, functions). Teaches imperative programming and methods for ensuring the correctness of programs.  Students will learn the process and concepts needed to go from high-level descriptions of algorithms to correct imperative implementations, with specific application to basic data structures and algorithms.  Much of the course will be conducted in a subset of C amenable to verification, with a transition to full C near the end. This course prepares students for 15-213 and 15-210.  NOTE: students must achieve a C or better in order to use  this course to satisfy the pre-requisite for any subsequent Computer  Science course.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nIliano CervesatoAnne Kohlbrenner\n\nClick to read more...\n[CARD]\n15150\n\n\t\t\t\nPrinciples of Functional Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15150\n\n\t\t\t\nPrinciples of Functional Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tAn introduction to programming based on a \"functional\" model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputs---that is, as a function.  But instead of being confined to real- or complex-valued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally; recursive functions, which compute over inductive types by decomposition; and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nZeliha Dilsun KaynarStephanie Balzer\n\nClick to read more...\n[CARD]\n15151\n\n\t\t\t\nMathematical Foundations for Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15151\n\n\t\t\t\nMathematical Foundations for Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\t*CS majors only* This course is offered to incoming Computer Science freshmen and focuses on the fundamental concepts in Mathematics that are of particular interest to Computer Science such as logic, sets,induction, functions, and combinatorics. These topics are used as a context in which students learn to formalize arguments using the methods of mathematical proof.  This course uses experimentation and collaboration as ways to gain better understanding of the material.  Open to CS freshmen only. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nJohn MackeyWilliam Kuszmaul\n\nClick to read more...\n[CARD]\n15195\n\n\t\t\t\nCompetition Programming I\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n15195\n\n\t\t\t\nCompetition Programming I\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tEach year, Carnegie Mellon fields several teams for participation in the ICPC Regional Programming Contest. During many recent years, one of those teams has earned the right to represent Carnegie Mellon at the ICPC World Finals. This course is a vehicle for those who consistently and rigorously train in preparation for the contests to earn course credit for their effort and achievement. Preparation involves the study of algorithms, the practice of programming and debugging, the development of test sets, and the growth of team, communication, and problem solving skills. Neither the course grade nor the number of units earned are dependent on ranking in any contest. Students are not required to earn course credit to participate in practices or to compete in ACM-ICPC events. Students who have not yet taken 15-295 should register for 15-195; only students who have already taken 15-295 should register for 15-295 again.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDanny Sleator\n\nClick to read more...\n[CARD]\n15210\n\n\t\t\t\nParallel and Sequential Data Structures and Algorithms\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15210\n\n\t\t\t\nParallel and Sequential Data Structures and Algorithms\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tTeaches students about how to design, analyze, and program algorithms and data structures.  The course emphasizes parallel algorithms and analysis, and how sequential algorithms can be considered a special case.  The course goes into more theoretical content on algorithm analysis than 15-122 and 15-150 while still including a significant programming component and covering a variety of practical applications such as problems in data analysis, graphics, text processing, and the computational sciences.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer  Science course. Register for Lecture 1.  All students will be waitlisted for Lecture 2 until Lecture 1 is full.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nCharlie GarrodGuy Blelloch\n\nClick to read more...\n[CARD]\n15213\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15213\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE FOR GRADUATE STUDENTS: This course is not open to graduate students beginning Spring 2015. Graduate students must register for 15-513 instead.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nBrian RailingPhillip Gibbons\n\nClick to read more...\n[CARD]\n15251\n\n\t\t\t\nGreat Ideas in Theoretical Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15251\n\n\t\t\t\nGreat Ideas in Theoretical Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is about how to use theoretical ideas to formulate and solve problems in computer science. It integrates mathematical material with general problem solving techniques and computer science applications. Examples are drawn from algorithms, complexity theory, game theory, probability theory, graph theory, automata theory, algebra, cryptography, and combinatorics. Assignments involve both mathematical proofs and programming.  NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nRyan O'DonnellAnil Ada\n\nClick to read more...\n[CARD]\n15259\n\n\t\t\t\nProbability and Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15259\n\n\t\t\t\nProbability and Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tProbability theory is indispensable in computer science today. In areas such as artificial intelligence and computer science theory, probabilistic reasoning and randomization are central. Within networks and systems, probability is used to model uncertainty and queuing latency. This course gives an introduction to probability as it is used in computer science theory and practice, drawing on applications and current research developments as motivation. The course has 3 parts:  Part I is an introduction to probability, including discrete and continuous random variables, heavy tails, simulation, Laplace transforms, z-transforms, and applications of generating functions. Part II is an in-depth coverage of concentration inequalities, like the Chernoff bound and SLLN bounds, as well as their use in randomized algorithms.  Part III covers Markov chains (both discrete-time and continuous-time) and stochastic processes and their application to queuing systems performance modeling. This is a fast-paced class which will cover more material than the other probability options and will cover it in greater depth.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nFeras SaadKlaus Sutner\n\nClick to read more...\n[CARD]\n15281\n\n\t\t\t\nArtificial Intelligence: Representation and Problem Solving\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15281\n\n\t\t\t\nArtificial Intelligence: Representation and Problem Solving\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is about the theory and practice of Artificial Intelligence. We will study modern techniques for computers to represent task-relevant information and make intelligent (i.e. satisficing or optimal) decisions towards the achievement of goals. The search and problem solving methods are applicable throughout a large range of industrial, civil, medical, financial, robotic, and information systems.  We will investigate questions about AI systems such as: how to represent knowledge, how to effectively generate appropriate sequences of actions and how to search among alternatives to find optimal or near-optimal solutions.  We will also explore how to deal with uncertainty in the world, how to learn from experience, and how to learn decision rules from data.  We expect that by the end of the course students will have a thorough understanding of the algorithmic foundations of AI, how probability and AI are closely interrelated, and how automated agents learn.  We also expect students to acquire a strong appreciation of the big-picture aspects of developing fully autonomous intelligent agents.  Other lectures will introduce additional aspects of AI, including natural language processing, web-based search engines, industrial applications, autonomous robotics, and economic/game-theoretic decision making.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nPatrick Virtue\n\nClick to read more...\n[CARD]\n15294\n\n\t\t\t\nSpecial Topic: Rapid Prototyping Technologies\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n15294\n\n\t\t\t\nSpecial Topic: Rapid Prototyping Technologies\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis mini-course introduces students to rapid prototyping technologies with a focus on laser cutting and 3D printing.  The course has three components: 1) A survey of rapid prototyping and additive manufacturing technologies, the maker and open source movements, and societal impacts of these technologies; 2) An introduction to the computer science behind these technologies: CAD tools, file formats, slicing algorithms; 3) Hands-on experience with SolidWorks, laser cutting, and 3D printing, culminating in student projects (e.g. artistic creations, functional objects, replicas of famous calculating machines, etc.).\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDavid Touretzky\n\nClick to read more...\n[CARD]\n15295\n\n\t\t\t\nCompetition Programming II\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n15295\n\n\t\t\t\nCompetition Programming II\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tEach year, Carnegie Mellon fields several teams for participation in the ICPC Regional Programming Contest. During many recent years, one of those teams has earned the right to represent Carnegie Mellon at the ICPC World Finals. This course is a vehicle for those who consistently and rigorously train in preparation for the contests to earn course credit for their effort and achievement. Preparation involves the study of algorithms, the practice of programming and debugging, the development of test sets, and the growth of team, communication, and problem solving skills. Neither the course grade nor the number of units earned are dependent on ranking in any contest. Students are not required to earn course credit to participate in practices or to compete in ACM-ICPC events. Students who have not yet taken 15-295 should register for 15-195; only students who have already taken 15-295 should register for 15-295 again.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDanny Sleator\n\nClick to read more...\n[CARD]\n15312\n\n\t\t\t\nFoundations of Programming Languages\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15312\n\n\t\t\t\nFoundations of Programming Languages\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nRobert Harper\n\nClick to read more...\n[CARD]\n15317\n\n\t\t\t\nConstructive Logic\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n15317\n\n\t\t\t\nConstructive Logic\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nKarl Crary\n\nClick to read more...\n[CARD]\n15319\n\n\t\t\t\nCloud Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15319\n\n\t\t\t\nCloud Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course gives students an overview of Cloud Computing, which is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. Students will study its enabling technologies, building blocks, and gain hands-on experience through projects utilizing public cloud infrastructures.  Cloud computing services are widely adopted by many organizations across domains.  The course will introduce the cloud and cover the topics of data centers, software stack, virtualization, software defined networks and storage, cloud storage, and programming models. We will start by discussing the clouds motivating factors, benefits, challenges, service models, SLAs and security. We will describe several concepts behind data center design and management, which enable the economic and technological benefits of the cloud paradigm. Next, we will study how CPU, memory and I/O resources, network (SDN) and storage (SDS) are virtualized, and the key role of virtualization to enable the cloud. Subsequently, students will study cloud storage concepts like data distribution, durability, consistency and redundancy. We will discuss distributed file systems, NoSQL databases and object storage using HDFS, CephFS, HBASE, MongoDB, Cassandra, DynamoDB, S3, and Swift as case studies. Finally, students will study the MapReduce, Spark and GraphLab programming models. Students will work with Amazon Web Services and Microsoft Azure, to rent and provision compute resources and then program and deploy applications using these resources. Students will develop and evaluate scaling and load balancing solutions, work with cloud storage systems, and develop applications in several programming paradigms. 15619 students must complete an extra team project which entails designing and implementing a cost- and performance-sensitive web-service for querying big data.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMajd SakrSeth Goldstein\n\nClick to read more...\n[CARD]\n15330\n\n\t\t\t\nIntroduction to Computer Security\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15330\n\n\t\t\t\nIntroduction to Computer Security\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tSecurity is becoming one of the core requirements in the design of critical systems. This course will introduce students to the intro-level fundamental knowledge of computer security and applied cryptography. Students will learn the basic concepts in computer security including software vulnerability analysis and defense, networking and wireless security, and applied cryptography. Students will also learn the fundamental methodology for how to design and analyze security critical systems.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nElaine ShiRiccardo Paccagnella\n\nClick to read more...\n[CARD]\n15346\n\n\t\t\t\nComputer Architecture: Design and Simulation\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15346\n\n\t\t\t\nComputer Architecture: Design and Simulation\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course will help students develop an understanding of basic microarchitectural principles and designs.  Starting with creating benchmarks and simulators, students will learn the practice of computer architecture design.  The emphasis will be on how processors exploit instruction-level parallelism for performance, as well as the supporting technologies such as caches and branch prediction that are required.  Several frontiers of current research will be explored in energy efficiency and security threats.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nBrian Railing\n\nClick to read more...\n[CARD]\n15351\n\n\t\t\t\nAlgorithms and Advanced Data Structures\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15351\n\n\t\t\t\nAlgorithms and Advanced Data Structures\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe objective of this course is to study algorithms for general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course may have a few programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead. THIS COURSE IS NOT OPEN TO COMPUTER SCIENCE MAJORS OR MINORS.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDan DeBlasio\n\nClick to read more...\n[CARD]\n15356\n\n\t\t\t\nIntroduction to Cryptography\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15356\n\n\t\t\t\nIntroduction to Cryptography\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is aimed as an introduction to modern cryptography. This course will be a mix of applied and theoretical cryptography. We will cover popular primitives such as: pseudorandom functions, encryption, signatures, zero-knowledge proofs, multi-party computation, and Blockchains. In addition, we will cover the necessary number-theoretic background. We will cover formal definitions of security, as well as constructions based on well established assumptions like factoring. Please see the course webpage for a detailed list of topics.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nAayush Jain\n\nClick to read more...\n[CARD]\n15362\n\n\t\t\t\nComputer Graphics\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15362\n\n\t\t\t\nComputer Graphics\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course provides a comprehensive introduction to computer graphics modeling, animation, and rendering. Topics covered include basic image processing, geometric transformations, geometric modeling of curves and surfaces, animation, 3-D viewing, visibility algorithms, shading, and ray tracing.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nOscar Dadfar\n\nClick to read more...\n[CARD]\n15369\n\n\t\t\t\nNumerical Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n15369\n\n\t\t\t\nNumerical Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tMany problems in science, engineering, and computer graphics cannot be solved exactly. Numerical computing provides methods to approximate these solutions using computational techniques. It combines mathematics and programming to solve real-world problems such as simulations, optimization, and data analysis.\n\nThe course begins with a review of key mathematical concepts like vector spaces, matrices, and calculus. We then explore how numbers are represented on computers, the types of errors that can occur, and strategies to handle them. Core topics include solving linear and nonlinear systems, eigenvalue problems, optimization, and techniques such as LU decomposition, QR factorization, and singular value decomposition (SVD). We will also cover iterative methods for large systems, interpolation, numerical differentiation, integration, and both ordinary and partial differential equations.\n\nStudents will gain hands-on experience implementing algorithms and learn to balance accuracy, stability, and efficiency in computational solutions.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMinchen Li\n\nClick to read more...\n[CARD]\n15387\n\n\t\t\t\nComputational Perception\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n15387\n\n\t\t\t\nComputational Perception\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tIn this course, we will first cover the biological and psychological foundational knowledge of biological perceptual systems, and then apply computational thinking to investigate the principles and mechanisms underlying natural perception. The course will focus on vision this year, but will also touch upon other sensory modalities. You will learn how to reason scientifically and computationally about problems and issues in perception, how to extract the essential computational properties of those abstract ideas, and finally how to convert these into explicit mathematical models and computational algorithms. Topics include perceptual representation and inference, perceptual organization, perceptual constancy, object recognition, learning and scene analysis. Prerequisites: First year college calculus, some basic knowledge of linear algebra and probability and some programming experience are desirable.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nTai-Sing Lee\n\nClick to read more...\n[CARD]\n15394\n\n\t\t\t\nIntermediate Rapid Prototyping\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n15394\n\n\t\t\t\nIntermediate Rapid Prototyping\n\n\n\t\t\t\t\t\t\t\t\t\n            5\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course covers additional topics in rapid prototyping beyond the content of 15-294.  Example topics include mechanism design, procedural shape generation using Grasshopper, 3D scanning and mesh manipulation, and advanced SolidWorks concepts. The only prerequisite is basic familiarity with SolidWorks, which can be obtained via 15-294, from other CMU courses, or from online tutorials.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDavid Touretzky\n\nClick to read more...\n[CARD]\n15410\n\n\t\t\t\nOperating System Design and Implementation\n\n\n\t\t\t\t\t\t\t\t\t\n            15\n15410\n\n\t\t\t\nOperating System Design and Implementation\n\n\n\t\t\t\t\t\t\t\t\t\n            15\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tOperating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems. The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and \"team programming\" skills (source control, modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.  Students, especially graduate students, who have not satisfied the prerequisite at Carnegie Mellon are strongly cautioned - to enter the class you must be able to write a storage allocator in C, use a debugger, understand 2's-complement arithmetic, and translate between C and x86 assembly language.  The instructor may require you to complete a skills assessment exercise before the first week of the semester in order to remain registered in the class.  Auditing:  this course is usually full, and we generally receive many more requests to audit than we can accept.  If you wish to audit, please have your advisor contact us before the semester begins to discuss your educational goals.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave EckhardtBabu Pillai\n\nClick to read more...\n[CARD]\n15412\n\n\t\t\t\nOperating System Practicum\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15412\n\n\t\t\t\nOperating System Practicum\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe goal of this class is for students to acquire hands-on experience with operating-system code as it is developed and deployed in the real world.  Groups of two to four students will select, build, install, and become familiar with an open-source operating system project; propose a significant extension or upgrade to that project; and develop a production-quality implementation meeting the coding standards of that project.  Unless infeasible, the results will be submitted to the project for inclusion in the code base.  Variations on this theme are possible at the discretion of the instructor.  For example, it may be possible to work within the context of a non-operating-system software infrastructure project (window system, web server, or embedded network device kernel) or to extend a 15-410 student kernel.  In some situations students may work alone.  Group membership and unit count (9 units versus 12) will be decided by the third week of the semester.  Contributing to a real-world project will involve engaging in some mixture of messy, potentially open-ended activities such as: learning a revision control system, writing a short design document, creating and updating a simple project plan, participating in an informal code review, synthesizing scattered information about hardware and software, classifying and/or reading large amounts of code written by various people over a long period of time, etc.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave Eckhardt\n\nClick to read more...\n[CARD]\n15414\n\n\t\t\t\nBug Catching: Automated Program Verification\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n15414\n\n\t\t\t\nBug Catching: Automated Program Verification\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n      \n\t\t\t\t\t\t\t\n\n\nMany CS and ECE students will be developing software and hardware that must be ultra reliable at some point in their careers. Logical errors in such designs can be costly, even life threatening. There have already been a number of well publicized errors like the Intel Pentium floating point error and the Arian 5 crash. In this course we will study tools for finding and preventing logical errors. Three types of tools will be studied: automated theorem proving, state exploration techniques like model checking and tools based on static program analysis. Although students will learn the theoretical basis for such tools, the emphasis will be on actually using them on real examples. This course can be used to satisfy the Logic & Languages requirement for the Computer Science major.\n\n\n\nInstructor(s)\n\nMatt Fredrikson\n\nClick to read more...\n[CARD]\n15418\n\n\t\t\t\nParallel Computer Architecture and Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15418\n\n\t\t\t\nParallel Computer Architecture and Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nZhihao JiaDimitrios Skarlatos\n\nClick to read more...\n[CARD]\n15440\n\n\t\t\t\nDistributed Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15440\n\n\t\t\t\nDistributed Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nHeather MillerWenting ZhengPeter Steenkiste\n\nClick to read more...\n[CARD]\n15441\n\n\t\t\t\nNetworking and the Internet\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15441\n\n\t\t\t\nNetworking and the Internet\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.    The goal is for students to learn not only what computer networks are and how they work today, but also why they are designed the way they are and how they are likely to evolve in the future. We will draw examples primarily from the Internet. Topics to be covered include: network architecture, routing, congestion/flow/error control, naming and addressing,  peer-to-peer and the web, internetworking, and network security.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nJustine Sherry\n\nClick to read more...\n[CARD]\n15445\n\n\t\t\t\nDatabase Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15445\n\n\t\t\t\nDatabase Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is on the design and implementation of database management systems. Topics include data models (relational, document, key/value), storage models (n-ary, decomposition), query languages (SQL, stored procedures), storage architectures (heaps, log-structured), indexing (order preserving trees, hash tables), transaction processing (ACID, concurrency control), recovery (logging, checkpoints), query processing (joins, sorting, aggregation, optimization), and parallel architectures (multi-core, distributed). Case studies on open-source and commercial database systems will be used to illustrate these techniques and trade-offs. The course is appropriate for students with strong systems programming skills.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nAndrew Pavlo\n\nClick to read more...\n[CARD]\n15451\n\n\t\t\t\nAlgorithm Design and Analysis\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15451\n\n\t\t\t\nAlgorithm Design and Analysis\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDanny SleatorDaniel Anderson\n\nClick to read more...\n[CARD]\n15463\n\n\t\t\t\nComputational Photography\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15463\n\n\t\t\t\nComputational Photography\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\nComputational photography is the convergence of computer graphics, computer vision and imaging. Its role is to overcome the limitations of the traditional camera, by combining imaging and computation to enable new and enhanced ways of capturing, representing, and interacting with the physical world. This advanced undergraduate course provides a comprehensive overview of the state of the art in computational photography. At the start of the course, we will study modern image processing pipelines, including those encountered on mobile phone and DSLR cameras, and advanced image and video editing algorithms. Then we will proceed to learn about the physical and computational aspects of tasks such as 3D scanning, coded photography, lightfield imaging, time-of-flight imaging, VR/AR displays, and computational light transport. Near the end of the course, we will discuss active research topics, such as creating cameras that capture video at the speed of light, cameras that look around walls, or cameras that can see through tissue. The course has a strong hands-on component, in the form of seven homework assignments and a final project. In the homework assignments, students will have the opportunity to implement many of the techniques covered in the class, by both acquiring their own images of indoor and outdoor scenes and developing the computational tools needed to extract information from them. For their final projects, students will have the choice to use modern sensors provided by the instructors (lightfield cameras, time-of-flight cameras, depth sensors, structured light systems, etc.). This course requires familiarity with linear algebra, calculus, programming, and doing computations with images. The course does not require prior experience with photography or imaging.\n\n\n\nInstructor(s)\n\nIoannis Gkioulekas\n\nClick to read more...\n[CARD]\n15466\n\n\t\t\t\nComputer Game Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15466\n\n\t\t\t\nComputer Game Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe goal of this course is to acquaint students with the code required to turn ideas into games. This includes both runtime systems -- e.g., AI, sound, physics, rendering, and networking -- and the asset pipelines and creative tools that make it possible to author content that uses these systems. In the first part of the course, students will implement small games that focus on specific runtime systems, along with appropriate asset editors or exporters. In the second part, students will work in groups to build a larger, polished, open-ended game project. Students who have completed the course will have the skills required to extend -- or build from scratch -- a modern computer game.  Students wishing to take this class should be familiar with the C++ language and have a basic understanding of the OpenGL API. If you meet these requirements but have not taken Computer Graphics (the formal prerequisite), please contact the instructor.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nJames McCann\n\nClick to read more...\n[CARD]\n15473\n\n\t\t\t\nVisual Computing Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15473\n\n\t\t\t\nVisual Computing Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tVisual computing tasks such as computational imaging, image/video understanding, and real-time graphics are key responsibilities of modern computer systems ranging from sensor-rich smart phones to large datacenters. These workloads demand exceptional system efficiency and this course examines the key ideas, techniques, and challenges associated with the design of parallel, heterogeneous systems that accelerate visual computing applications. This course is intended for graduate and advanced undergraduate-level students interested in architecting efficient graphics, image processing, and computer vision platforms.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nOscar Dadfar\n\nClick to read more...\n[CARD]\n15482\n\n\t\t\t\nAutonomous Agents\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15482\n\n\t\t\t\nAutonomous Agents\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tAutonomous agents use perception, cognition, actuation, and learning to reliably achieve desired goals, where the agents can be smart homes, mobile robots, intelligent factories, self-driving cars, etc. The goal of this course is to introduce students to techniques needed for developing complete, integrated AI-based autonomous agents. Topics include architectures for intelligent agents; autonomous behaviors, perception, and execution; reasoning under uncertainty; optimization; execution monitoring; machine learning; scheduling; and explanation. A focus of the course will be on the integration and testing of autonomous systems to achieve reliable and robust behavior in the face of sensor noise and uncertainty.  The course is project-oriented where small teams of students will design, implement, and evaluate agents that can grow plants autonomously, without human intervention.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nReid Simmons\n\nClick to read more...\n[CARD]\n15495\n\n\t\t\t\nAlgebraic and Numerical Algorithms\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15495\n\n\t\t\t\nAlgebraic and Numerical Algorithms\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\nThis course will provide some implementation motivated perspectives on algebraic and numerical algorithms, and will somewhat follow the Complexity and Linear Algebra semester program at the Simons Institute (https://simons.berkeley.edu/programs/complexity-linear-algebra). It will normally meet on Wednesdays and Fridays, with some Monday meetings to fit the schedule of the program.\n\n\n\nInstructor(s)\n\nRichard Peng\n\nClick to read more...\n[CARD]\n15513\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15513\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nBrian RailingPhillip Gibbons\n\nClick to read more...\n[CARD]\n15559\n\n\t\t\t\nProbability and Computing\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15559\n\n\t\t\t\nProbability and Computing\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tProbability theory is indispensable in computer science today. In areas such as artificial intelligence and computer science theory, probabilistic reasoning and randomization are central. Within networks and systems, probability is used to model uncertainty and queuing latency. This course gives an introduction to probability as it is used in computer science theory and practice, drawing on applications and current research developments as motivation. The course has 3 parts:  Part I is an introduction to probability, including discrete and continuous random variables, heavy tails, simulation, Laplace transforms, z-transforms, and applications of generating functions. Part II is an in-depth coverage of concentration inequalities, like the Chernoff bound and SLLN bounds, as well as their use in randomized algorithms.  Part III covers Markov chains (both discrete-time and continuous-time) and stochastic processes and their application to queuing systems performance modeling. This is a fast-paced class which will cover more material than the other probability options and will cover it in greater depth.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nKlaus SutnerFeras Saad\n\nClick to read more...\n[CARD]\n15591\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15591\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe School of Computer Science offers Independent Study courses, which allow motivated students to work on projects under the supervision of a faculty advisor while receiving academic credit. Independent studies are usually one semester in duration and require prior approval from the faculty member and the School of Computer Science.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMark Stehlik\n\nClick to read more...\n[CARD]\n15592\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15592\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe School of Computer Science offers Independent Study courses, which allow motivated students to work on projects under the supervision of a faculty advisor while receiving academic credit. Independent studies are usually one semester in duration and require prior approval from the faculty member and the School of Computer Science.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMark Stehlik\n\nClick to read more...\n[CARD]\n15593\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15593\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe School of Computer Science offers Independent Study courses, which allow motivated students to work on projects under the supervision of a faculty advisor while receiving academic credit. Independent studies are usually one semester in duration and require prior approval from the faculty member and the School of Computer Science.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMark Stehlik\n\nClick to read more...\n[CARD]\n15604\n\n\t\t\t\nImmigration Course\n\n\n\t\t\t\t\t\t\t\t\t\n            3\n15604\n\n\t\t\t\nImmigration Course\n\n\n\t\t\t\t\t\t\t\t\t\n            3\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis is a discussion course with enrollment limited to MS in CS students during their first semester in the program. Students explore the scope of graduate education in computer science, the tools and techniques for success, and the resources available to MS in CS students. Students also explore life after graduation, including careers in academia, industry, and other organizations, and plan an academic program that supports their individual goals.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave EckhardtRuben Martins\n\nClick to read more...\n[CARD]\n15605\n\n\t\t\t\nOperating System Design and Implementation\n\n\n\t\t\t\t\t\t\t\t\t\n            15\n15605\n\n\t\t\t\nOperating System Design and Implementation\n\n\n\t\t\t\t\t\t\t\t\t\n            15\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tOperating System Design and Implementation is a rigorous hands-on introduction to the principles and practice of operating systems.  The core experience is writing a small Unix-inspired OS kernel, in C with some x86 assembly language, which runs on a PC hardware  simulator (and on actual PC hardware if you wish).  Work is done in two-person teams, and \"team programming\" skills (source control,  modularity, documentation) are emphasized.  The size and scope of the programming assignments typically result in students significantly developing their design, implementation, and debugging abilities. Core concepts include the process model, virtual memory, threads, synchronization, and deadlock; the course also surveys higher-level OS topics including file systems, interprocess communication, networking, and security.    Students, especially graduate students, who have not satisfied the prerequisite at  Carnegie Mellon are strongly cautioned - to enter the class you must be able  to write a storage allocator in C, use a debugger, understand 2's-complement  arithmetic, and translate between C and x86 assembly language.  The  instructor may require you to complete a skills assessment exercise before  the first week of the semester in order to remain registered in the class.    Auditing:  this course is usually full, and we generally receive  many more requests to audit than we can accept.  If you wish to  audit, please have your advisor contact us before the semester  begins to discuss your educational goals.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave EckhardtBabu Pillai\n\nClick to read more...\n[CARD]\n15612\n\n\t\t\t\nOperating System Practicum\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15612\n\n\t\t\t\nOperating System Practicum\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe goal of this class is for students to acquire hands-on experience  with operating-system code as it is developed and deployed in the  real world.  Groups of two to four students will select, build,  install, and become familiar with an open-source operating system  project; propose a significant extension or upgrade to that project;  and develop a production-quality implementation meeting the coding  standards of that project.  Unless infeasible, the results will be  submitted to the project for inclusion in the code base.    Variations on this theme are possible at the discretion of the  instructor.  For example, it may be possible to work within the  context of a non-operating-system software infrastructure project  (window system, web server, or embedded network device kernel) or  to extend a 15-410 student kernel.  In some situations students  may work alone.  Group membership and unit count (9 units versus  12) will be decided by the third week of the semester.    Contributing to a real-world project will involve engaging  in some mixture of messy, potentially open-ended activities  such as: learning a revision control system, writing a  short design document, creating and updating a simple project  plan, participating in an informal code review, synthesizing  scattered information about hardware and software, classifying  and/or reading large amounts of code written by various people  over a long period of time, etc.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave Eckhardt\n\nClick to read more...\n[CARD]\n15614\n\n\t\t\t\nBug Catching: Automated Program Verification\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n15614\n\n\t\t\t\nBug Catching: Automated Program Verification\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n      \n\t\t\t\t\t\t\t\n\n\nMany CS and ECE students will be developing software and hardware that must be ultra reliable at some point in their careers. Logical errors in such designs can be costly, even life threatening. There have already been a number of well publicized errors like the Intel Pentium floating point error and the Ariane 5 crash. In this course we will study tools for finding and preventing logical errors. Three types of tools will be studied: automated theorem proving, state exploration techniques like model checking and tools based on static program analysis. Although students will learn the theoretical basis for such tools, the emphasis will be on actually using them on real examples.  This course can be used to satisfy the Logic & Languages requirement for the Computer Science major.\n\n\n\nInstructor(s)\n\nMatt Fredrikson\n\nClick to read more...\n[CARD]\n15618\n\n\t\t\t\nParallel Computer Architecture and Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15618\n\n\t\t\t\nParallel Computer Architecture and Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe fundamental principles and engineering tradeoffs involved in designing modern parallel computers, as well as the programming techniques to effectively utilize these machines. Topics include naming shared data, synchronizing threads, and the latency and bandwidth associated with communication. Case studies on shared-memory, message-passing, data-parallel and dataflow machines will be used to illustrate these techniques and tradeoffs. Programming assignments will be performed on one or more commercial multiprocessors, and there will be a significant course project.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nZhihao JiaDimitrios Skarlatos\n\nClick to read more...\n[CARD]\n15619\n\n\t\t\t\nCloud Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            15\n15619\n\n\t\t\t\nCloud Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            15\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course gives students an overview of Cloud Computing, which is the delivery of computing as a service over a network, whereby distributed resources are rented, rather than owned, by an end user as a utility. Students will study its enabling technologies, building blocks, and gain hands-on experience through projects utilizing public cloud infrastructures.  Cloud computing services are widely adopted by many organizations across domains.  The course will introduce the cloud and cover the topics of data centers, software stack, virtualization, software defined networks and storage, cloud storage, and programming models. We will start by discussing the cloud¿s motivating factors, benefits, challenges, service models, SLAs and security. We will describe several concepts behind data center design and management, which enable the economic and technological benefits of the cloud paradigm. Next, we will study how CPU, memory and I/O resources, network (SDN) and storage (SDS) are virtualized, and the key role of virtualization to enable the cloud. Subsequently, students will study cloud storage concepts like data distribution, durability, consistency and redundancy. We will discuss distributed file systems, NoSQL databases and object storage using HDFS, CephFS, HBASE, MongoDB, Cassandra, DynamoDB, S3, and Swift as case studies. Finally, students will study the MapReduce, Spark and GraphLab programming models.  Students will work with Amazon Web Services and Microsoft Azure, to rent and provision compute resources and then program and deploy applications using these resources. Students will develop and evaluate scaling and load balancing solutions, work with cloud storage systems, and develop applications in several programming paradigms. 15619 students must complete an extra team project which entails designing and implementing a cost- and performance-sensitive web-service for querying big data.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nSeth GoldsteinMajd Sakr\n\nClick to read more...\n[CARD]\n15639\n\n\t\t\t\nIndependent Study in Computer Science Pedagogy\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15639\n\n\t\t\t\nIndependent Study in Computer Science Pedagogy\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis class is for master's students contributing to the development and delivery of a class, e.g., in a co-instructor role or as a preparation for teaching professionally.  Students will be supervised by a faculty member and will participate in graduate teaching support activities sponsored by the Eberly Center for Teaching Excellence and Educational Innovation. You must contact your academic advisor to be enrolled in the class.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave EckhardtRuben Martins\n\nClick to read more...\n[CARD]\n15640\n\n\t\t\t\nDistributed Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15640\n\n\t\t\t\nDistributed Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe goals of this course are twofold: First, for students to gain an understanding of the principles and techniques behind the design of distributed systems, such as locking, concurrency, scheduling, and communication across the network. Second, for students to gain practical experience designing, implementing, and debugging real distributed systems.  The major themes this course will teach include scarcity, scheduling, concurrency and concurrent programming, naming, abstraction and modularity, imperfect communication and other types of failure, protection from accidental and malicious harm, optimism, and the use of instrumentation and monitoring and debugging tools in problem solving. As the creation and management of software systems is a fundamental goal of any undergraduate systems course, students will design, implement, and debug large programming projects.   As a consequence, competency in both the C and Java programming languages is required.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nHeather MillerPeter SteenkisteWenting Zheng\n\nClick to read more...\n[CARD]\n15641\n\n\t\t\t\nNetworking and the Internet\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15641\n\n\t\t\t\nNetworking and the Internet\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe emphasis in this course will be on the basic performance and engineering trade-offs in the design and implementation of computer networks. To make the issues more concrete, the class includes several multi-week projects requiring significant design and implementation.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nJustine Sherry\n\nClick to read more...\n[CARD]\n15645\n\n\t\t\t\nDatabase Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15645\n\n\t\t\t\nDatabase Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is on the design and implementation of database management systems. Topics include data models (relational, document, key/value), storage models (n-ary, decomposition), query languages (SQL, stored procedures), storage architectures (heaps, log-structured), indexing (order preserving trees, hash tables), transaction processing (ACID, concurrency control), recovery (logging, checkpoints), query processing (joins, sorting, aggregation, optimization), and parallel architectures (multi-core, distributed). Case studies on open-source and commercial database systems will be used to illustrate these techniques and trade-offs. The course is appropriate for students with strong systems programming skills.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nAndrew Pavlo\n\nClick to read more...\n[CARD]\n15650\n\n\t\t\t\nAlgorithms & Advanced Data Structures\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15650\n\n\t\t\t\nAlgorithms & Advanced Data Structures\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe objective of this course is to study general computational problems, with a focus on the principles used to design those algorithms. Efficient data structures will be discussed to support these algorithmic concepts. Topics include: Run time analysis, divide-and-conquer algorithms, dynamic programming algorithms, network flow algorithms, linear and integer programming, large-scale search algorithms and heuristics, efficient data storage and query, and NP-completeness. Although this course will have several programming assignments, it is primarily not a programming course. Instead, it will focus on the design and analysis of algorithms for general classes of problems. This course is not open to CS graduate students who should consider taking 15-651 instead.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDan DeBlasio\n\nClick to read more...\n[CARD]\n15651\n\n\t\t\t\nAlgorithm Design and Analysis\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15651\n\n\t\t\t\nAlgorithm Design and Analysis\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is intended for SCS graduate students.  All other graduate students should register for 15-650.  This course is about the design and analysis of algorithms. We study specific algorithms for a variety of problems, as well as general design and analysis techniques. Specific topics include searching, sorting, algorithms for graph problems, efficient data structures, lower bounds and NP-completeness. A variety of other topics may be covered at the discretion of the instructor. These include parallel algorithms, randomized algorithms, geometric algorithms, low level techniques for efficient programming, cryptography, and cryptographic protocols.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDanny SleatorDaniel Anderson\n\nClick to read more...\n[CARD]\n15652\n\n\t\t\t\nFoundations of Programming Languages\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15652\n\n\t\t\t\nFoundations of Programming Languages\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course discusses in depth many of the concepts underlying the design, definition, implementation, and use of modern programming languages. Formal approaches to defining the syntax and semantics are used to describe the fundamental concepts underlying programming languages. A variety of programming paradigms are covered such as imperative, functional, logic, and concurrent programming. In addition to the formal studies, experience with programming in the languages is used to illustrate how different design goals can lead to radically different languages and models of computation.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nRobert Harper\n\nClick to read more...\n[CARD]\n15657\n\n\t\t\t\nConstructive Logic\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n15657\n\n\t\t\t\nConstructive Logic\n\n\n\t\t\t\t\t\t\t\t\t\n            9\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis multidisciplinary junior-level course is designed to provide a thorough introduction to modern constructive logic, its roots in philosophy, its numerous applications in computer science, and its mathematical properties. Some of the topics to be covered are intuitionistic logic, inductive definitions, functional programming, type theory, realizability, connections between classical and constructive logic, decidable classes. This course counts as a Fundamentals course in the Computer Science major.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nKarl Crary\n\nClick to read more...",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Fall 2025 Courses | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/upcoming-courses"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Summer 2025 Courses\n[HEADING] Summer 2025\n[HEADING] Courses & Curriculum Related Resources\nSee the HUB steps to register for guidance.\nYou can toggle for Graduate or Undergraduate or search by course number.\nCurrent Semester Courses |Fall 2025 Courses | Doctoral Breadth Courses\nSchedule of Classes | Undergraduate Curriculum Requirements | Undergraduate Catalog\nMSCS Handbook | Fifth Year Master's Handbook | Ph.D. Handbook | Student Resources\nClick to read more...\nInstructor(s)\nMark Stehlik\nClick to read more...\nA course in fundamental computing principles for students with minimal or no computing background. Programming constructs: sequencing, selection, iteration, and recursion. Data organization: arrays and lists. Use of abstraction in computing: data representation, computer organization, computer networks, functional decomposition, and application programming interfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems based on complexity, non-computable functions, and using heuristics to find reasonable solutions to complex problems. Social, ethical and legal issues associated with the development of new computational artifacts will also be discussed. Please direct any questions about this waitlist to Sara Kuntz at sgolembi@andrew.cmu.edu.\nInstructor(s)\nDaniel Anderson\nClick to read more...\nA technical introduction to the fundamentals of programming with an emphasis on producing clear, robust, and reasonably efficient code using top-down design, informal analysis, and effective testing and debugging. Starting from first principles, we will cover a large subset of the Python programming language, including its standard libraries and programming paradigms. We will also target numerous deployment scenarios, including standalone programs, shell scripts, and web-based applications. This course assumes no prior programming experience. Even so, it is a fast-paced and rigorous preparation for 15-122. Students seeking a more gentle introduction to computer science should consider first taking 15-110. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\nInstructor(s)\nMichael Taylor\nClick to read more...\nFor students with a basic understanding of programming (variables, expressions, loops, arrays, functions). Teaches imperative programming and methods for ensuring the correctness of programs. Students will learn the process and concepts needed to go from high-level descriptions of algorithms to correct imperative implementations, with specific application to basic data structures and algorithms. Much of the course will be conducted in a subset of C amenable to verification, with a transition to full C near the end. This course prepares students for 15-213 and 15-210. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\nClick to read more...\nInstructor(s)\nSonya Simkin\nClick to read more...\nInstructor(s)\nBrian Railing\nClick to read more...\nInstructor(s)\nBrian Railing\nClick to read more...\nInstructor(s)\nMark Stehlik\nClick to read more...\nInstructor(s)\nDave Eckhardt\nClick to read more...\nInstructor(s)\nDave Eckhardt\nClick to read more...\nInstructor(s)\nDave EckhardtRuben Martins\nClick to read more...\nInstructor(s)\nDave EckhardtTracy FarbacherRuben Martins\nClick to read more...\nInstructor(s)\nDave EckhardtRuben Martins\nClick to read more...\nCurrently, there is no description information available.\nInstructor(s)\nInstructor(s)\nClick to read more...\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n[CARD]\nCourses & Curriculum Related ResourcesCurrent Semester Courses |Fall 2025 Courses | Doctoral Breadth CoursesSchedule of Classes | Undergraduate Curriculum Requirements | Undergraduate CatalogMSCS Handbook | Fifth Year Master's Handbook | Ph.D. Handbook | Student Resources\n[CARD]\n15051\n\n\t\t\t\nDiscrete Math Primer\n\n\n\t\t\t\t\t\t\t\t\t\n            1\n15051\n\n\t\t\t\nDiscrete Math Primer\n\n\n\t\t\t\t\t\t\t\t\t\n            1\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tDMP is an online course that introduces students to three foundational topics in mathematics: logic, sets and functions.  The course differs from traditional counterparts in its strong and consistent emphasis on computational aspects.  This approach is particularly suitable for students who are interested in the computational universe, and not just in classical mathematics.  Each of the three modules in DMP ends in a checkpoint, an assessment that helps students evaluate their understanding of the material.  Incoming undergraduate computer science majors are encouraged to take this online course prior to arrival on campus. Additionally, high school students contemplating a computer science or mathematics major may find this course useful.    The course uses Carnegie Mellon's OLI system as a delivery platform.\n\n\n\t\t\t\nClick to read more...\n[CARD]\n15090\n\n\t\t\t\nComputer Science Practicum\n\n\n\t\t\t\t\t\t\t\t\t\n            3\n15090\n\n\t\t\t\nComputer Science Practicum\n\n\n\t\t\t\t\t\t\t\t\t\n            3\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is for Computer Science students who wish to have an  internship experience as part of their curriculum. Students are required  to write a one-page summary statement prior to registration that  explains how their internship connects with their CS curriculum,  specifically on how it uses material they have learned as well as  prepares them for future courses. Near the end of the internship,  students will be required to submit a reflection paper that describes  the work they did in more detail, including lessons learned about the  work experience and how they utilized their CS education to work  effectively. International students should consult with the Office of  International Education for appropriate paperwork and additional  requirements before registration. Units earned count toward the total  required units necessary for degree completion; students should speak  with an academic advisor for details. This course may be taken at most 3  times for a total of 9 units maximum. Students normally register for  this course for use during the summer semester.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMark Stehlik\n\nClick to read more...\n[CARD]\n15110\n\n\t\t\t\nPrinciples of Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n15110\n\n\t\t\t\nPrinciples of Computing\n\n\n\t\t\t\t\t\t\t\t\t\n            10\n      \n\t\t\t\t\t\t\t\n\n\nA course in fundamental computing principles for students with minimal or no computing background. Programming constructs: sequencing, selection, iteration, and recursion. Data organization: arrays and lists. Use of abstraction in computing: data representation, computer organization, computer networks, functional decomposition, and application programming interfaces. Use of computational principles in problem-solving: divide and conquer, randomness, and concurrency. Classification of computational problems based on complexity, non-computable functions, and using heuristics to find reasonable solutions to complex problems. Social, ethical and legal issues associated with the development of new computational artifacts will also be discussed. Please direct any questions about this waitlist to Sara Kuntz at sgolembi@andrew.cmu.edu.\n\n\n\nInstructor(s)\n\nDaniel Anderson\n\nClick to read more...\n[CARD]\n15112\n\n\t\t\t\nFundamentals of Programming and Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15112\n\n\t\t\t\nFundamentals of Programming and Computer Science\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\nA technical introduction to the fundamentals of programming with an emphasis on producing clear, robust, and reasonably efficient code using top-down design, informal analysis, and effective testing and debugging. Starting from first principles, we will cover a large subset of the Python programming language, including its standard libraries and programming paradigms. We will also target numerous deployment scenarios, including standalone programs, shell scripts, and web-based applications. This course assumes no prior programming experience. Even so, it is a fast-paced and rigorous preparation for 15-122. Students seeking a more gentle introduction to computer science should consider first taking 15-110. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\n\n\n\nInstructor(s)\n\nMichael Taylor\n\nClick to read more...\n[CARD]\n15122\n\n\t\t\t\nPrinciples of Imperative Computation\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15122\n\n\t\t\t\nPrinciples of Imperative Computation\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\nFor students with a basic understanding of programming (variables, expressions, loops, arrays, functions). Teaches imperative programming and methods for ensuring the correctness of programs. Students will learn the process and concepts needed to go from high-level descriptions of algorithms to correct imperative implementations, with specific application to basic data structures and algorithms. Much of the course will be conducted in a subset of C amenable to verification, with a transition to full C near the end. This course prepares students for 15-213 and 15-210. NOTE: students must achieve a C or better in order to use this course to satisfy the pre-requisite for any subsequent Computer Science course.\n\nClick to read more...\n[CARD]\n15150\n\n\t\t\t\nPrinciples of Functional Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15150\n\n\t\t\t\nPrinciples of Functional Programming\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tAn introduction to programming based on a \"functional\" model of computation.  The functional model is a natural generalization of algebra in which programs are formulas that describe the output of a computation in terms of its inputs---that is, as a function.  But instead of being confined to real- or complex-valued functions, the functional model extends the algebraic view to a very rich class of data types, including not only aggregates built up from other types, but also functions themselves as values.  This course is an introduction to programming that is focused on the central concepts of function and type.  One major theme is the interplay between inductive types, which are built up incrementally; recursive functions, which compute over inductive types by decomposition; and proof by structural induction, which is used to prove the correctness and time complexity of a recursive function.  Another major theme is the role of types in structuring large programs into separate modules, and the integration of imperative programming through the introduction of data types whose values may be altered during computation.    NOTE: students must achieve a C or better in order to use   this course to satisfy the pre-requisite for any subsequent Computer   Science course. David Khan will be teaching this course, Summer 22. Please direct any questions about this waitlist to Amy Weis at alweis@andrew.cmu.edu.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nSonya Simkin\n\nClick to read more...\n[CARD]\n15213\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n15213\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            12\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. NOTE FOR GRADUATE STUDENTS: This course is not open to graduate students beginning Spring 2015. Graduate students must register for 15-513 instead.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nBrian Railing\n\nClick to read more...\n[CARD]\n15503\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            6\n15503\n\n\t\t\t\nIntroduction to Computer Systems\n\n\n\t\t\t\t\t\t\t\t\t\n            6\n      \n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation. **This online course is only available to incoming master's students who need a refresher course on computer systems. Not open to undergraduates.**\n\n\n\t\t\t\n\n\nInstructor(s)\n\nBrian Railing\n\nClick to read more...\n[CARD]\n15591\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15591\n\n\t\t\t\nIndependent Study in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThe School of Computer Science offers Independent Study courses, which allow motivated students to work on projects under the supervision of a faculty advisor while receiving academic credit. Independent studies are usually one semester in duration and require prior approval from the faculty member and the School of Computer Science.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nMark Stehlik\n\nClick to read more...\n[CARD]\n15639\n\n\t\t\t\nIndependent Study in Computer Science Pedagogy\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15639\n\n\t\t\t\nIndependent Study in Computer Science Pedagogy\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis class is for master's students contributing to the development and delivery of a class, e.g., in a co-instructor role or as a preparation for teaching professionally.  Students will be supervised by a faculty member and will participate in graduate teaching support activities sponsored by the Eberly Center for Teaching Excellence and Educational Innovation. You must contact your academic advisor to be enrolled in the class.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave Eckhardt\n\nClick to read more...\n[CARD]\n15689\n\n\t\t\t\nIndependent Study in the Computer Sciences\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15689\n\n\t\t\t\nIndependent Study in the Computer Sciences\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is for Computer Science master's students carrying out research supervised by a faculty member. Students will be automatically wait-listed pending program approval of an independent-study prospectus (contact your academic advisor for details).\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave Eckhardt\n\nClick to read more...\n[CARD]\n15691\n\n\t\t\t\nPracticum\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15691\n\n\t\t\t\nPracticum\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tTo be determined\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave EckhardtRuben Martins\n\nClick to read more...\n[CARD]\n15697\n\n\t\t\t\nGraduate Reading and Research\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15697\n\n\t\t\t\nGraduate Reading and Research\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tNo course description provided.\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave EckhardtTracy FarbacherRuben Martins\n\nClick to read more...\n[CARD]\n15698\n\n\t\t\t\nMSCS Research Thesis\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15698\n\n\t\t\t\nMSCS Research Thesis\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tThis course is for students in the \"MSCS\" course-based Computer Science master's program who are participating in the thesis option.  Students will be automatically wait-listed pending program approval of a thesis proposal (contact your academic advisor for details).\n\n\n\t\t\t\n\n\nInstructor(s)\n\nDave EckhardtRuben Martins\n\nClick to read more...\n[CARD]\n15997\n\n\t\t\t\nGraduate Reading and Research\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15997\n\n\t\t\t\nGraduate Reading and Research\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\nCurrently, there is no description information available.\n\n\n\nInstructor(s)\n\nKarl Crary\n[CARD]\n15998\n\n\t\t\t\nPracticum in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n15998\n\n\t\t\t\nPracticum in Computer Science\n\n\n\t\t\t\t\t\t\t\t\tvaries\n\t\t\t\t\t\t\t\n\n\n\t\t\n\t\t\tDoctoral Student Internships\n\n\n\t\t\t\n\n\nInstructor(s)\n\nKarl Crary\n\nClick to read more...",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Summer 2025 Courses | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/courses"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Fifth-Year Master's\n[HEADING] Who Can Apply?\n[HEADING] How long does the program take to complete?\n[HEADING] When to Apply\n[HEADING] How to Apply\n[HEADING] Program Requirements & Curriculum\nThe Fifth Year Master’s Program is administered by the Computer Science Department, but students can elect to complete research projects in areas throughout the School of Computer Science.\nStudents are admitted based on strong evidence of research potential through close interaction with one or more faculty members — whether in projects, summer jobs or advanced classes. In addition to faculty support, we will also consider input from external people familiar with your background and research experience (e.g., a supervisor for a summer internship).\nThe deadlines are listed below. Students from the Pittsburgh campus must identify their research advisor in their application, but students from the Qatar can apply without advisor and identify an advisor after they have been admitted.\nStudents from both the Pittsburgh and Qatar campuses can apply.\nNOTE: Students with a B.S. in AI from the Machine Learning Department can also apply if they meet certain breadth requirements that are documented below.\nThe program lasts 12 months, including one standard academic year and one summer. You typically start working on a research project during the summer after your senior year, and continue that project while taking classes during the academic year.\nStudents should submit a formal application in the middle of the fall semester or in the beginning of the spring semester of their senior year. You can start the program in a fall or spring semester, however you can only start the Fifth Year Master's program after you have received your B.S. in CS or B.S. in AI at CMU.\nPlease refer to specific information on the Master's Programs admissions page.\nTo earn their master’s degree, students in the Fifth Year Master’s Program will take a minimum of 48 units of graduate courses in the School of Computer Science. To satisfy the breadth requirement, students should take at least two courses in different areas in computer science from this breadth course list (CMU authentication required).\nThe remaining units (a minimum of 24) should consist of electives used to gain depth in the student's research area. The elective units can be satisfied using any course at the 700 level and above in SCS and, with prior approval, outside SCS. Students must receive a grade of A or B in each course; they receive no credit for grades of C or below.\nStudents must also complete a significant research project resulting in a thesis (96 units). The thesis research should result in a document and an oral presentation summarizing the results of their project.\nAdditional Breadth Requirements for Students with a B.S. in AI from CMU\nThe B.S. degree in AI shares many of the technical course requirements with the B.S. in CS.  Given this overlap, students with a B.S. in AI can also apply to the CSD 5th year MS program. Details on the B.S. in CS requirements can be found on our undergraduate curriculum page: https://csd.cmu.edu/academics/undergraduate/requirements The B.S. in CS and AI differ in their breadth requirements. In order to apply to the 5th Year MS, students in the B.S. in AI program must take the following two breadth area courses:\nYou can see a detailed description of the program's requirements and curriculum in our Fifth Year Master's Handbook.\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• 15-451 (Algorithm Design and Implementation)\n• One course satisfying either the Logic and Languages or the Software System Design Elective requirement.  The BS AI includes SCS electives, which can, for example, be used to satisfy this requirement.\n• These courses must be taken before they enter the 5th Year MS program.\n• BS AI students automatically meet the AI Elective and, because of the AI Cluster Electives requirement, the Domains Elective requirements.\n• As noted on the admissions information, BS AI students should include a short paragraph in their two-page statement documenting how they meet, or plan to meet, the BS CS breadth requirement listed above.\n• Academics\n\n\nCurrent Courses\n\n\nUpcoming Semester Courses\n\n\nSchedule of Classes\n\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n• Master's Programs\n\n\nM.S. in Computer Science\n\n\nFifth Year Master's\n\n\nAccelerated MBA Program\n\n\nMaster's - How to Apply\n\n\nMaster's Programs Contacts\n\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n• Student Resources\n[CARD]\nWho Can Apply?Students from both the Pittsburgh and Qatar campuses can apply. NOTE: Students with a B.S. in AI from the Machine Learning Department can also apply if they meet certain breadth requirements that are documented below.\n[CARD]\nHow long does the program take to complete?The program lasts 12 months, including one standard academic year and one summer. You typically start working on a research project during the summer after your senior year, and continue that project while taking classes during the academic year.\n[CARD]\nWhen to ApplyStudents should submit a formal application in the middle of the fall semester or in the beginning of the spring semester of their senior year. You can start the program in a fall or spring semester, however you can only start the Fifth Year Master's program after you have received your B.S. in CS or B.S. in AI at CMU.How to ApplyPlease refer to specific information on the Master's Programs admissions page.\n[CARD]\nProgram Requirements & CurriculumTo earn their master’s degree, students in the Fifth Year Master’s Program will take a minimum of 48 units of graduate courses in the School of Computer Science. To satisfy the breadth requirement, students should take at least two courses in different areas in computer science from this breadth course list (CMU authentication required).The remaining units (a minimum of 24) should consist of electives used to gain depth in the student's research area. The elective units can be satisfied using any course at the 700 level and above in SCS and, with prior approval, outside SCS. Students must receive a grade of A or B in each course; they receive no credit for grades of C or below.Students must also complete a significant research project resulting in a thesis (96 units). The thesis research should result in a document and an oral presentation summarizing the results of their project.Additional Breadth Requirements for Students with a B.S. in AI from CMUThe B.S. degree in AI shares many of the technical course requirements with the B.S. in CS.  Given this overlap, students with a B.S. in AI can also apply to the CSD 5th year MS program. Details on the B.S. in CS requirements can be found on our undergraduate curriculum page: https://csd.cmu.edu/academics/undergraduate/requirements The B.S. in CS and AI differ in their breadth requirements. In order to apply to the 5th Year MS, students in the B.S. in AI program must take the following two breadth area courses:15-451 (Algorithm Design and Implementation)One course satisfying either the Logic and Languages or the Software System Design Elective requirement.  The BS AI includes SCS electives, which can, for example, be used to satisfy this requirement.These courses must be taken before they enter the 5th Year MS program.BS AI students automatically meet the AI Elective and, because of the AI Cluster Electives requirement, the Domains Elective requirements.As noted on the admissions information, BS AI students should include a short paragraph in their two-page statement documenting how they meet, or plan to meet, the BS CS breadth requirement listed above.You can see a detailed description of the program's requirements and curriculum in our Fifth Year Master's Handbook.",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "Fifth-Year Master's | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/masters/fifth-year"
    },
    {
      "content": "[HEADING] Back to Main Menu\n[HEADING] Admissions\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Academics\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] People\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] Back to Main Menu\n[HEADING] Research\n\t\t\t\t\t\t\t\t\t\t\t\t\tMain page\n[HEADING] M.S. in Computer Science\n[HEADING] How long does the program take to complete?\n[HEADING] Program Requirements\nThe M.S. in Computer Science offers students with a bachelor's degree the opportunity to improve their training with advanced study in computer science.\nWe cater to students with basic analytic skills and a strong aptitude for mathematics, programming, and logical reasoning.  You don’t need a bachelor’s degree in computer science specifically for the program, but a technical undergraduate background will set you up for success.\nOur program isn’t based on a fixed set of courses. Instead, you’ll construct your own course of study, in consultation with your advisor. The program requires only coursework; research is optional, though approximately a third of our students have some research involvement during the course of their studies, and there is a\nthesis option.\nMost students will complete the program in three semesters, but if you’re switching to computer science from another field, you may need an additional semester to fill gaps in your undergraduate training. The M.S. program is distinct from the Ph.D. program in computer science, and master's students will not usually continue into the Ph.D. program and will not receive preferential treatment if they apply.\nYou must complete six broad requirements:\n(* \"Passing” is considered receiving a letter grade of C or higher.)\nSome students may need to take additional courses that do not satisfy any program requirement, in order to satisfy pre-requisites for other courses. For example, most students will be expected to take 15-213/513 (Introduction to Computer Systems).\n15-213/513 can be taken over the Internet during the summer, and new master’s students are encouraged to do so before they arrive. Students who completed their undergraduate work at CMU can apply up to two courses taken as an undergraduate toward requirements for the M.S., provided the two courses were not previously used to satisfy any requirement.\nYou can see a detailed description of the program's requirements and curriculum in our MSCS Handbook.\nHow to Apply\nFor questions specific to the Master of Science in Computer Science (MSCS) please email:csd-mscs-admissions@cs.cmu.edu\n• About\n\nRelated links\n\n\nEvents\n\nNews\n\nKey Contacts\n\nHistory\n\nSitemap\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Employment\n\nRelated links\n\n\nFaculty Hiring\n\nStaff Hiring\n• Faculty Hiring\n• Staff Hiring\n• Marketing & Communications\n\nRelated links\n\n\nSCS Marketing & Communications\n\nPartnerships \n\nEmployer Recruiting\n\nCMU Marketing & Communications\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visit Carnegie Mellon\n\nRelated links\n\n\nVisitor Parking\n\nMaps & Directions\n• Visitor Parking\n• Maps & Directions\n• Give\n• Events\n• News\n• Key Contacts\n• History\n• Sitemap\n• Faculty Hiring\n• Staff Hiring\n• SCS Marketing & Communications\n• Partnerships\n• Employer Recruiting\n• CMU Marketing & Communications\n• Visitor Parking\n• Maps & Directions\n• Prospective Students\n• Bachelor's Admissions\n\nRelated links\n\n\nBachelor's Programs\n• Bachelor's Programs\n• Master's Admissions\n\nRelated links\n\n\nMaster's Programs\n• Master's Programs\n• Doctoral Admissions\n\nRelated links\n\n\nDoctoral Programs\n\nCore CSD Doctoral Advisors\n\nAdmitted Doctoral Student Open House\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Bachelor's Programs\n• Master's Programs\n• Doctoral Programs\n• Core CSD Doctoral Advisors\n• Admitted Doctoral Student Open House\n• Academics\n\nRelated links\n\n\nCurrent Courses\n\nUpcoming Semester Courses\n\nSchedule of Classes\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n\nRelated links\n\n\nHow to Apply as Incoming First-Year\n\nB.S. in CS Curriculum\n\nB.S. in CS Concentrations\n\nB.S. in CS External Course Transfer\n\nB.S. in CS Program Contacts\n\nGuidelines for Internal Transfer or Dual Degree\n\nMinor and Additional Major in Computer Science\n\nOther SCS Undergraduate Programs\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• Master's Programs\n\nRelated links\n\n\nM.S. in Computer Science\n\nFifth Year Master's\n\nAccelerated MBA Program\n\nMaster's - How to Apply\n\nMaster's Programs Contacts\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n\nRelated links\n\n\nPh.D. in Computer Science\n\nPh.D. in ACO\n\nPh.D. in PAL\n\nCNBC Certificate Program\n\nPh.D. Dual Degree Portugal\n\nDoctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n\n\n\nCore CSD Advisors\n\nDegrees Conferred\n\nOther SCS Doctoral Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• How to Apply as Incoming First-Year\n• B.S. in CS Curriculum\n• B.S. in CS Concentrations\n• B.S. in CS External Course Transfer\n• B.S. in CS Program Contacts\n• Guidelines for Internal Transfer or Dual Degree\n• Minor and Additional Major in Computer Science\n• Other SCS Undergraduate Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Ph.D. in Computer Science\n• Ph.D. in ACO\n• Ph.D. in PAL\n• CNBC Certificate Program\n• Ph.D. Dual Degree Portugal\n• Doctoral - How to Apply\n\nRelated links\n\n\nDoctoral Open House\n• Doctoral Open House\n• Core CSD Advisors\n• Degrees Conferred\n• Other SCS Doctoral Programs\n• Doctoral Open House\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n\nRelated links\n\n\nDoctoral Program Handbook\n\nDoctoral Breadth Courses\n\nDoctoral Student Review Schedule\n\nDoctoral Writing Skills\n\nDoctoral Speaking Skills\n\nDoctoral Thesis Proposal Process\n\nDoctoral Thesis Oral Defense Process\n\nDoctoral Degrees Conferred\n\nDoctoral Student Ombudspersons\n\nDoctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Doctoral Program Handbook\n• Doctoral Breadth Courses\n• Doctoral Student Review Schedule\n• Doctoral Writing Skills\n• Doctoral Speaking Skills\n• Doctoral Thesis Proposal Process\n• Doctoral Thesis Oral Defense Process\n• Doctoral Degrees Conferred\n• Doctoral Student Ombudspersons\n• Doctoral Student Service Award\n• Directory\n\nRelated links\n\n\nAll Faculty\n\nTeaching Faculty\n\nEmeritus Faculty\n\nStaff\n\nDoctoral \n\nPost-Docs\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• Key Contacts\n• Staff Resources\n• Student Resources\n\nRelated links\n\n\nGeneral Student Resources\n\nBachelor's Resources\n\nMaster's Resources\n\nDoctoral Resources\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Resources\n• All Faculty\n• Teaching Faculty\n• Emeritus Faculty\n• Staff\n• Doctoral\n• Post-Docs\n• General Student Resources\n• Bachelor's Resources\n• Master's Resources\n• Doctoral Resources\n• Faculty Research Guide\n• Artificial Intelligence\n\nRelated links\n\n\nComputational Neuroscience\n\nMachine Learning\n\nRobotics\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Graphics\n\nRelated links\n\n\nRobotics\n• Robotics\n• Programming Languages\n\nRelated links\n\n\nFormal Methods\n\nPure and Applied Logic\n\nSoftware Engineering\n\nSoftware Verification\n\nType Theory\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Security\n\nRelated links\n\n\nCryptography\n\nSecurity and Privacy\n• Cryptography\n• Security and Privacy\n• Systems\n\nRelated links\n\n\nComputer Architecture\n\nDatabases\n\nData-intensive and Cloud Computing\n\nDistributed Systems\n\nHuman-Computer Interaction\n\nMobile & Pervasive Computing\n\nNetworking\n\nOperating Systems\n\nScientific Computing\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Theory\n\nRelated links\n\n\nAlgorithms and Complexity\n\nGame Theory\n\nPerformance Modeling Analysis\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Computational Neuroscience\n• Machine Learning\n• Robotics\n• Robotics\n• Formal Methods\n• Pure and Applied Logic\n• Software Engineering\n• Software Verification\n• Type Theory\n• Cryptography\n• Security and Privacy\n• Computer Architecture\n• Databases\n• Data-intensive and Cloud Computing\n• Distributed Systems\n• Human-Computer Interaction\n• Mobile & Pervasive Computing\n• Networking\n• Operating Systems\n• Scientific Computing\n• Algorithms and Complexity\n• Game Theory\n• Performance Modeling Analysis\n• Pass* 96-108 units in qualifying master’s courses from the curriculum list in the MSCS Handbook. This is typically eight courses.\n• Pass up to 12 MSCS elective units.\n• Pass one course from the available Systems courses. (counts toward Qualifying unit)\n• Pass one course from the available Theoretical Foundations courses. (counts toward Qualifying unit)\n• Pass one course from the available Artificial Intelligence courses. (counts toward Qualifying unit)\n• Maintain a 3.0 QPA.\n• Academics\n\n\nCurrent Courses\n\n\nUpcoming Semester Courses\n\n\nSchedule of Classes\n\n\nUndergraduate Catalog\n• Current Courses\n• Upcoming Semester Courses\n• Schedule of Classes\n• Undergraduate Catalog\n• Bachelor's Programs\n• Master's Programs\n\n\nM.S. in Computer Science\n\n\nFifth Year Master's\n\n\nAccelerated MBA Program\n\n\nMaster's - How to Apply\n\n\nMaster's Programs Contacts\n\n\nOther SCS Master's Programs\n• M.S. in Computer Science\n• Fifth Year Master's\n• Accelerated MBA Program\n• Master's - How to Apply\n• Master's Programs Contacts\n• Other SCS Master's Programs\n• Doctoral Programs\n• Student Resources\n[CARD]\nM.S. in Computer Science\nWe cater to students with basic analytic skills and a strong aptitude for mathematics, programming, and logical reasoning.  You don’t need a bachelor’s degree in computer science specifically for the program, but a technical undergraduate background will set you up for success.\nOur program isn’t based on a fixed set of courses. Instead, you’ll construct your own course of study, in consultation with your advisor. The program requires only coursework; research is optional, though approximately a third of our students have some research involvement during the course of their studies, and there is a\nthesis option.\n[CARD]\nHow long does the program take to complete?Most students will complete the program in three semesters, but if you’re switching to computer science from another field, you may need an additional semester to fill gaps in your undergraduate training. The M.S. program is distinct from the Ph.D. program in computer science, and master's students will not usually continue into the Ph.D. program and will not receive preferential treatment if they apply.\n[CARD]\nProgram RequirementsYou must complete six broad requirements:Pass* 96-108 units in qualifying master’s courses from the curriculum list in the MSCS Handbook. This is typically eight courses.Pass up to 12 MSCS elective units.Pass one course from the available Systems courses. (counts toward Qualifying unit)Pass one course from the available Theoretical Foundations courses. (counts toward Qualifying unit)Pass one course from the available Artificial Intelligence courses. (counts toward Qualifying unit)Maintain a 3.0 QPA.(* \"Passing” is considered receiving a letter grade of C or higher.)Some students may need to take additional courses that do not satisfy any program requirement, in order to satisfy pre-requisites for other courses. For example, most students will be expected to take 15-213/513 (Introduction to Computer Systems).15-213/513 can be taken over the Internet during the summer, and new master’s students are encouraged to do so before they arrive. Students who completed their undergraduate work at CMU can apply up to two courses taken as an undergraduate toward requirements for the M.S., provided the two courses were not previously used to satisfy any requirement.You can see a detailed description of the program's requirements and curriculum in our MSCS Handbook.How to ApplyFor questions specific to the Master of Science in Computer Science (MSCS) please email:csd-mscs-admissions@cs.cmu.edu",
      "crawl_status": "success",
      "depth": 1,
      "links": [],
      "title": "M.S. in Computer Science | Carnegie Mellon University Computer Science Department",
      "url": "https://csd.cmu.edu/academics/masters/ms-in-computer-science"
    }
  ],
  "program_name": "卡内基梅隆大学计算机科学硕士",
  "project_id": "58bde5c3-280a-485a-bd7c-e1b6da3128fc",
  "root_url": "https://csd.cmu.edu/academics/masters/overview#mscsoverview",
  "source_file": "计算机.json",
  "status": "completed",
  "total_pages": 14
}